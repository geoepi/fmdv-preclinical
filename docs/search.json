[
  {
    "objectID": "incubation.html#clinical-onset",
    "href": "incubation.html#clinical-onset",
    "title": "Incubation Phase",
    "section": "Clinical Onset",
    "text": "Clinical Onset\nThe find_clinical_onset() function identifies first occurrence of score > 0 then creates new “Event” column with 1 at this date, 0’s before this date, and a value 3 after that date.\n\n\nHide code\nclin_start_df <- as.data.frame(\n  find_clinical_onset(antem_df)\n)"
  },
  {
    "objectID": "incubation.html#remove-group-1",
    "href": "incubation.html#remove-group-1",
    "title": "Incubation Phase",
    "section": "Remove Group 1",
    "text": "Remove Group 1\nGroup 1 was not infected and has no expectation of developing disease. Animals that were infected, verified by nasal, serum, or fever but never developed lesions are censored.\n\n\nHide code\nclin_start_df <- clin_start_df %>%\n filter(group != \"Group 1\",\n         Event == 1 | censor_status == 0 & censor_k == 1)\n\n\ncheck data\n\n\nHide code\nclin_start_df %>%\n  filter(Event == 1) %>%\n  summarise(mean_dpe = mean(dpe),\n            median_dpe = median(dpe))\n\n\n\n\n\n\nmean_dpe\nmedian_dpe\n\n\n\n\n3.076923\n3"
  },
  {
    "objectID": "incubation.html#scale-time",
    "href": "incubation.html#scale-time",
    "title": "Incubation Phase",
    "section": "Scale Time",
    "text": "Scale Time\nAdd an arbitrarily small value to eliminate zeros. Really not need with his specific data set, by an important step.\n\n\nHide code\nclin_start_df$scaled_duration <- clin_start_df$dpe + 0.0001"
  },
  {
    "objectID": "incubation.html#weighted-contacts",
    "href": "incubation.html#weighted-contacts",
    "title": "Incubation Phase",
    "section": "Weighted Contacts",
    "text": "Weighted Contacts\nContact with groups by donors was sequential at 24hr intervals, shedding rates (nasal swabs) varied over this period.\n\n\nHide code\nshed_rates <- antem_df %>%\n  filter(group == \"donor\") %>%\n  group_by(dpi) %>%\n  summarise(tot_shed = sum(ifelse(nasal == 45, 0, nasal), na.rm=T)) %>%\n  mutate(group = paste(\"Group\", dpi, sep=\" \"))\n\n# match cumulative shed from donors based on time of contact\nclin_start_df$donor_shed <- with(shed_rates,\n                                 tot_shed[match(\n                                   clin_start_df$group,\n                                                 group)])\n\n# an integer index is needed for modeling purposes, group contacts are 1:1 correlated with time\nclin_start_df$shed_time <- as.integer(as.factor(clin_start_df$group))"
  },
  {
    "objectID": "incubation.html#response-variable",
    "href": "incubation.html#response-variable",
    "title": "Incubation Phase",
    "section": "Response Variable",
    "text": "Response Variable\nCreating a survival object to ensure time and censored animals are correctly indicated.\n\n\nHide code\nsurv_obj <- inla.surv(clin_start_df$scaled_duration, clin_start_df$Event)\n\n\n\nParametric SuvivalAccelerated Failure Time (AFT)\n\n\nParametric model for study-wide average duration.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(0.5, 0.001)))\n\nincubation_dur <- inla(surv_obj ~ 1 + \n                         f(shed_time, donor_shed,\n                           model = \"rw1\",\n                           constr=TRUE,\n                           scale.model = TRUE,\n                           hyper=pc_prec_iid),\n                        data = clin_start_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"exponential.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\n\n\nTreatment is specific to group therefore using group below to identify important differences.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(0.5, 0.001)))\n\nincubation_aft <- inla(surv_obj ~ 1 +\n                       f(group,\n                           model = \"iid\",\n                           constr=FALSE,\n                           hyper=pc_prec_iid),\n                        data = clin_start_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"lognormal.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\nWarning in sqrt(ee): NaNs produced"
  },
  {
    "objectID": "incubation.html#survival-model",
    "href": "incubation.html#survival-model",
    "title": "Incubation Phase",
    "section": "Survival Model",
    "text": "Survival Model\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(0.5, 0.001)))\n\nincubation_dur <- inla(surv_obj ~ 1 +\n                         f(shed_time, donor_shed,\n                           model = \"rw1\",\n                           constr=TRUE,\n                           hyper=pc_prec_iid),\n                        data = clin_start_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"exponential.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))"
  },
  {
    "objectID": "incubation.html#sample-marginals",
    "href": "incubation.html#sample-marginals",
    "title": "Incubation Phase",
    "section": "Sample Marginals",
    "text": "Sample Marginals\nPerforming sampling on the parametric model results\n\n\nHide code\nincubation_samples <- compute_survival_marginals(incubation_dur, 14)\n\n\nCheck estimates at the 0.5 probability (median)\n\n\nHide code\nmedian_incubation <- find_closest_quant(incubation_samples, 0.5)\nmedian_incubation\n\n\n$quant0.025\n[1] 1.501\n\n$quant0.25\n[1] 2.301\n\n$quant0.5\n[1] 2.901\n\n$quant0.75\n[1] 3.701\n\n$quant0.975\n[1] 6.101"
  },
  {
    "objectID": "incubation.html#survival-curve",
    "href": "incubation.html#survival-curve",
    "title": "Incubation Phase",
    "section": "Survival Curve",
    "text": "Survival Curve\nExceedance survival curve fro parametric model.\n\n\nHide code\nplot_survival_marginals(incubation_samples, x_max = 14, xlabel = \"Incubation Phase Duration\")"
  },
  {
    "objectID": "latent.html#shedding-threshold",
    "href": "latent.html#shedding-threshold",
    "title": "Latent Phase",
    "section": "Shedding Threshold",
    "text": "Shedding Threshold\nPublished FMDV shedding estimate is around 3.92\n\n\nHide code\ndonor_thresh <- antem_df %>%\n  filter(group == \"donor\" & dpi == 2) # day of contact with Group 2\n\ndonor_thresh$nasal\n\n\n[1] 3.706999 6.411625\n\n\nHide code\nmean(donor_thresh$nasal)\n\n\n[1] 5.059312\n\n\nDesignate end of latent based on shed rate.\n\n\nHide code\nlatent_end_df <- antem_df %>%\n  filter(nasal >= 3.92 & nasal != 45) %>%\n  group_by(animal) %>%\n  filter(date == min(date)) %>%\n  mutate(latent_end = 1) %>%\n  ungroup()\n\n\nQuick stats to check data\n\n\nHide code\nlatent_end_df %>%\n  summarise(mean_dpe = mean(dpe),\n            median_dpe = median(dpe),\n            min_range = min(dpe),\n            max_range = max(dpe))\n\n\n\n\n\n\nmean_dpe\nmedian_dpe\nmin_range\nmax_range\n\n\n\n\n1.428571\n1\n1\n4"
  },
  {
    "objectID": "latent.html#scale-time",
    "href": "latent.html#scale-time",
    "title": "Latent Phase",
    "section": "Scale Time",
    "text": "Scale Time\nAdd an arbitrarily small value to eliminate zeros. Really not need with his specific data set, by an important step.\n\n\nHide code\nlatent_end_df$scaled_duration <- latent_end_df$dpe + 0.0001"
  },
  {
    "objectID": "latent.html#scale-serum",
    "href": "latent.html#scale-serum",
    "title": "Latent Phase",
    "section": "Scale Serum",
    "text": "Scale Serum\nScaling serum as potential covariate.\n\n\nHide code\nlatent_end_df$serum_0 <- latent_end_df$serum\nlatent_end_df$serum_0[latent_end_df$serum_0 == 45] = 0\nlatent_end_df$serum_0 <- as.numeric(scale(latent_end_df$serum_0, scale = T, center = F))"
  },
  {
    "objectID": "latent.html#response-variable",
    "href": "latent.html#response-variable",
    "title": "Latent Phase",
    "section": "Response Variable",
    "text": "Response Variable\nCreating a survival object to ensure time and censored animals are correctly indicated.\n\n\nHide code\nsurv_obj <- inla.surv(latent_end_df$scaled_duration, latent_end_df$latent_end)"
  },
  {
    "objectID": "latent.html#survival-model",
    "href": "latent.html#survival-model",
    "title": "Latent Phase",
    "section": "Survival Model",
    "text": "Survival Model\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\nlatent_end_mod <- inla(surv_obj ~ 1 + serum_0,\n                        data = latent_end_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"exponential.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))"
  },
  {
    "objectID": "latent.html#sample-marginals",
    "href": "latent.html#sample-marginals",
    "title": "Latent Phase",
    "section": "Sample Marginals",
    "text": "Sample Marginals\nPerforming sampling on the model results\n\n\nHide code\nlatent_samples <- compute_survival_marginals(latent_end_mod, 5)\n\n\nCheck estimates at the 0.5 probability (median)\n\n\nHide code\nmedian_latent <- find_closest_quant(latent_samples, 0.5)\nmedian_latent\n\n\n$quant0.025\n[1] 0.501\n\n$quant0.25\n[1] 0.901\n\n$quant0.5\n[1] 1.201\n\n$quant0.75\n[1] 1.501\n\n$quant0.975\n[1] 2.501"
  },
  {
    "objectID": "latent.html#survival-curve",
    "href": "latent.html#survival-curve",
    "title": "Latent Phase",
    "section": "Survival Curve",
    "text": "Survival Curve\n\n\nHide code\nplot_survival_marginals(latent_samples, x_max = 5, xlabel = \"Latent Phase Duration\")"
  },
  {
    "objectID": "latent.html#calculate-subclinical",
    "href": "latent.html#calculate-subclinical",
    "title": "Latent Phase",
    "section": "Calculate Subclinical",
    "text": "Calculate Subclinical\n\n\nHide code\n# from other analysis\nincubation_samples <- readRDS(here(\"assets/incubation_samples.rds\"))\nmedian_incubation <- readRDS(here(\"assets/incubation_median.rds\"))\n \nmedian_subclinical <- Map(function(x, y) x - y, median_incubation, median_latent)\n\nmedians_df <- as.data.frame(\n  rbind(\n    Incubation = as.data.frame(median_incubation),\n    Subclinical = as.data.frame(median_subclinical),\n    Latent = as.data.frame(median_latent)\n  )\n)\n\nmedians_df\n\n\n\n\n\n\n\nquant0.025\nquant0.25\nquant0.5\nquant0.75\nquant0.975\n\n\n\n\nIncubation\n1.501\n2.301\n2.901\n3.601\n5.901\n\n\nSubclinical\n1.000\n1.400\n1.700\n2.100\n3.400\n\n\nLatent\n0.501\n0.901\n1.201\n1.501\n2.501\n\n\n\n\n\n\nHide code\nmedians_df$Name <- rownames(medians_df)\nmedians_df$Name <- ordered(factor(medians_df$Name), c(\"Latent\", \"Subclinical\", \"Incubation\"))\n\n\nPlot median phases\n\n\nHide code\nplot_median_phases(medians_df)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nPlot subclinical curve.\n\n\nHide code\nplot_compare_marginals(incubation_samples, latent_samples)"
  },
  {
    "objectID": "preprocess.html",
    "href": "preprocess.html",
    "title": "Data Preprocessing",
    "section": "",
    "text": "Load needed libraries and packages.\n\n\nHide code\nlibrary(tidyverse)\nlibrary(here)\nlibrary(pals)"
  },
  {
    "objectID": "preprocess.html#custom-functions",
    "href": "preprocess.html#custom-functions",
    "title": "Data Preprocessing",
    "section": "Custom Functions",
    "text": "Custom Functions\nLoad customized functions.\n\n\nHide code\nsource(here(\"R/utilities.R\"))\nsource_dir(here(\"R\"))"
  },
  {
    "objectID": "preprocess.html#read-data",
    "href": "preprocess.html#read-data",
    "title": "Data Preprocessing",
    "section": "Read Data",
    "text": "Read Data\nData collected during animal experiment.\n\n\nHide code\nantem_df <- read_csv(here(\"local/bov_antemortem_2024.csv\"))\n\n# minimum date, donor inoculation\nmin_date <- min(antem_df$date)\n\n# add variables \nantem_df <- antem_df %>%\n  mutate(hpdi = as.numeric(difftime(date, min_date, units = \"hours\")), # hours post donor inoculation \n         hpe = dpe*24, # convert dpe to hpe\n         exp_type = if_else(group == \"donor\", \"inoc\", \"cont\"), # exposed by inoculation or direct contact\n         fever = if_else(temp >= 104, \"fever\", \"no_fever\"), # temp >= 104 constitutes fever\n         censor_status = if_else(group == \"Group 1\" | animal == \"BR23-24\", 0, 1), # No obs symptoms (0) in these \n  )"
  },
  {
    "objectID": "preprocess.html#plots-to-check-data",
    "href": "preprocess.html#plots-to-check-data",
    "title": "Data Preprocessing",
    "section": "Plots to Check Data",
    "text": "Plots to Check Data\n\nDonors\n\n\nHide code\nplot_donors(antem_df)\n\n\n\n\n\n\n\nContact Groups\n\n\nHide code\nplot_contact_groups(antem_df)"
  },
  {
    "objectID": "longitudinal.html#organize-data",
    "href": "longitudinal.html#organize-data",
    "title": "Longitudinal Analysis",
    "section": "Organize Data",
    "text": "Organize Data\n\n\nHide code\nlongitud_df <- antem_df %>% \n  filter(group != \"Group 1\") %>%\n  mutate(y_shed = if_else(nasal == 0, NA, nasal),\n         y_shed = if_else(nasal == 45, 0, y_shed),\n         y_serum = if_else(serum == 0, NA, serum),\n         y_serum = if_else(serum == 45, 0, y_serum),\n         temp_sc = as.numeric(scale(temp, scale = TRUE, center = TRUE)),\n         time_step = dpe + 1)\n\n#plot(density(longitud_df$y_serum, na.rm=T)) # ~normal"
  },
  {
    "objectID": "longitudinal.html#shedding-rates",
    "href": "longitudinal.html#shedding-rates",
    "title": "Longitudinal Analysis",
    "section": "Shedding Rates",
    "text": "Shedding Rates\nRun model for shedding (nasal swabs)\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_rw <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(1, 0.001)))\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(3, 0.001)))\n\nshed_form <- y_shed ~ 1 + f(time_step,\n                             model = \"rw1\",\n                             constr = TRUE,\n                             scale.model = TRUE,\n                             hyper=pc_prec_rw) +\n                           f(animal,\n                             model = \"iid\",\n                             constr=TRUE,\n                             hyper=pc_prec_iid) + \n                           f(exp_type, \n                             model = \"iid\",\n                             constr=TRUE,\n                             hyper=pc_prec_iid) +\n                             temp \n\nshed_model <- inla(shed_form, \n                   data = longitud_df, \n                   family = \"gaussian\",\n                   quantiles = return_quants,\n                   verbose=FALSE,\n                   control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n# summary(shed_model)\n\n\nPlot Time Effect\n\n\nHide code\ntime_df <- shed_model$summary.random$time_step[, c(1, 4:10)]\nnames(time_df) <- c(\"DPE\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\ntime_df$DPE <- time_df$DPE - 1\n\nplot_time_rw(time_df)\n\n\n\n\n\nPlot animals\n\n\nHide code\nanimal_df <- shed_model$summary.random$animal[, c(1, 4:10)]\nnames(animal_df) <- c(\"Animal\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\nplot_animals_linerange(animal_df)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nPlot exposure type\n\n\nHide code\nexptype_df <- shed_model$summary.random$exp_type[, c(1, 4:10)]\nnames(exptype_df) <- c(\"type\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\") \nexptype_df$type <- as.factor(exptype_df$type)\n\nlevels(exptype_df$type) <- c(\"Contact\", \"Inoculation\")\n\nplot_exposure_linerange(exptype_df)\n\n\n\n\n\nFixed effects coefficients\n\n\nHide code\ntemp_post <- shed_model$marginals.fixed \n\nnames(temp_post)\n\n\n[1] \"(Intercept)\" \"temp\"       \n\n\nTemperature\n\n\nHide code\nplot_fixed_posterior(temp_post, model = shed_model, xlabel = \"Temperature\", fixed_eff = \"temp\")\n\n\n\n\n\nIntercept\n\n\nHide code\nplot_fixed_posterior(temp_post, model = shed_model, xlabel = \"Intercept\", fixed_eff = \"(Intercept)\")"
  },
  {
    "objectID": "longitudinal.html#serum",
    "href": "longitudinal.html#serum",
    "title": "Longitudinal Analysis",
    "section": "Serum",
    "text": "Serum\nRun model for serum\n\n\nHide code\npc_prec_rw <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(1, 0.001)))\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(3, 0.001)))\n\nserum_form <- y_serum ~ 1 + f(time_step,\n                               model = \"rw1\",\n                               constr = TRUE,\n                               scale.model = TRUE,\n                               hyper=pc_prec_rw) +\n                             f(animal,\n                               model = \"iid\",\n                               constr=TRUE,\n                               hyper=pc_prec_iid) + \n                             f(exp_type, \n                               model = \"iid\",\n                               constr=TRUE,\n                               hyper=pc_prec_iid) +\n                               temp_sc \n\nserum_model <- inla(serum_form, \n                   data = longitud_df, \n                   family = \"gaussian\",\n                   quantiles = return_quants,\n                   verbose=FALSE,\n                   control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n# summary(serum_model)\n\n\nPlot Time Effect\n\n\nHide code\ntime_df <- serum_model$summary.random$time_step[, c(1, 4:10)]\nnames(time_df) <- c(\"DPE\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\ntime_df$DPE <- time_df$DPE - 1\n\nplot_time_rw(time_df)\n\n\n\n\n\nPlot animals\n\n\nHide code\nanimal_df <- serum_model$summary.random$animal[, c(1, 4:10)]\nnames(animal_df) <- c(\"Animal\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\nplot_animals_linerange(animal_df)\n\n\n\n\n\nPlot exposure type\n\n\nHide code\nexptype_df <- serum_model$summary.random$exp_type[, c(1, 4:10)]\nnames(exptype_df) <- c(\"type\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\") \nexptype_df$type <- as.factor(exptype_df$type)\n\nlevels(exptype_df$type) <- c(\"Contact\", \"Inoculation\")\n\nplot_exposure_linerange(exptype_df)\n\n\n\n\n\nFixed effects coefficients\n\n\nHide code\ntemp_post <- serum_model$marginals.fixed \n\nnames(temp_post)\n\n\n[1] \"(Intercept)\" \"temp_sc\"    \n\n\nTemperature\n\n\nHide code\nplot_fixed_posterior(temp_post, model = serum_model, xlabel = \"Temperature\", fixed_eff = \"temp_sc\")\n\n\n\n\n\nIntercept\n\n\nHide code\nplot_fixed_posterior(temp_post, model = serum_model, xlabel = \"Intercept\", fixed_eff = \"(Intercept)\")"
  },
  {
    "objectID": "longitudinal.html#lesion-score",
    "href": "longitudinal.html#lesion-score",
    "title": "Longitudinal Analysis",
    "section": "Lesion Score",
    "text": "Lesion Score\nRun model for lesion score\n\n\nHide code\npc_prec_rw <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(1, 0.001)))\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(3, 0.001)))\n\nscore_form <- score ~ 1 + f(time_step,\n                               model = \"rw1\",\n                               constr = TRUE,\n                               scale.model = TRUE,\n                               hyper=pc_prec_rw) +\n                             f(animal,\n                               model = \"iid\",\n                               constr=TRUE,\n                               hyper=pc_prec_iid) + \n                             f(exp_type, \n                               model = \"iid\",\n                               constr=TRUE,\n                               hyper=pc_prec_iid) +\n                               temp \n\nscore_model <- inla(score_form, \n                   data = longitud_df, \n                   family = \"gaussian\",\n                   quantiles = return_quants,\n                   verbose=FALSE,\n                   control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n# summary(score_model)\n\n\nPlot Time Effect\n\n\nHide code\ntime_df <- score_model$summary.random$time_step[, c(1, 4:10)]\nnames(time_df) <- c(\"DPE\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\ntime_df$DPE <- time_df$DPE - 1\n\nplot_time_rw(time_df)\n\n\n\n\n\nPlot animals\n\n\nHide code\nanimal_df <- score_model$summary.random$animal[, c(1, 4:10)]\nnames(animal_df) <- c(\"Animal\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\nplot_animals_linerange(animal_df)\n\n\n\n\n\nPlot exposure type\n\n\nHide code\nexptype_df <- score_model$summary.random$exp_type[, c(1, 4:10)]\nnames(exptype_df) <- c(\"type\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\") \nexptype_df$type <- as.factor(exptype_df$type)\n\nlevels(exptype_df$type) <- c(\"Contact\", \"Inoculation\")\n\nplot_exposure_linerange(exptype_df)\n\n\n\n\n\nFixed effects coefficients\n\n\nHide code\ntemp_post <- score_model$marginals.fixed \n\nnames(temp_post)\n\n\n[1] \"(Intercept)\" \"temp\"       \n\n\nTemperature\n\n\nHide code\nplot_fixed_posterior(temp_post, model = score_model, xlabel = \"Temperature\", fixed_eff = \"temp\")\n\n\n\n\n\nIntercept\n\n\nHide code\nplot_fixed_posterior(temp_post, model = score_model, xlabel = \"Intercept\", fixed_eff = \"(Intercept)\")"
  },
  {
    "objectID": "longitudinal.html#temperature",
    "href": "longitudinal.html#temperature",
    "title": "Longitudinal Analysis",
    "section": "Temperature",
    "text": "Temperature\nRun model for body temperature\n\n\nHide code\nlongitud_df$y_temper <- as.numeric(scale(longitud_df$temp, scale=TRUE, center=TRUE))\n\npc_prec_rw <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(1, 0.001)))\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(3, 0.001)))\n\ntemper_form <- y_temper ~ -1 + f(time_step,\n                                 model = \"rw1\",\n                                 constr = TRUE,\n                                 scale.model = TRUE,\n                                 hyper=pc_prec_rw) +\n                                f(animal,\n                                 model = \"iid\",\n                                 constr=TRUE,\n                                 hyper=pc_prec_iid) + \n                                f(exp_type, \n                                 model = \"iid\",\n                                 constr=TRUE,\n                                 hyper=pc_prec_iid) +\n                              score\n\ntemper_model <- inla(temper_form, \n                   data = longitud_df, \n                   family = \"gaussian\",\n                   quantiles = return_quants,\n                   verbose=FALSE,\n                   control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n# summary(temper_model)\n\n\nPlot Time Effect\n\n\nHide code\ntime_df <- temper_model$summary.random$time_step[, c(1, 4:10)]\nnames(time_df) <- c(\"DPE\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\ntime_df$DPE <- time_df$DPE - 1\n\nplot_time_rw(time_df)\n\n\n\n\n\nPlot animals\n\n\nHide code\nanimal_df <- temper_model$summary.random$animal[, c(1, 4:10)]\nnames(animal_df) <- c(\"Animal\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\nplot_animals_linerange(animal_df)\n\n\n\n\n\nPlot exposure type\n\n\nHide code\nexptype_df <- temper_model$summary.random$exp_type[, c(1, 4:10)]\nnames(exptype_df) <- c(\"type\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\") \nexptype_df$type <- as.factor(exptype_df$type)\n\nlevels(exptype_df$type) <- c(\"Contact\", \"Inoculation\")\n\nplot_exposure_linerange(exptype_df)\n\n\n\n\n\nFixed effects coefficients\n\n\nHide code\ntemp_post <- temper_model$marginals.fixed \n\nnames(temp_post)\n\n\n[1] \"score\"\n\n\nScore\n\n\nHide code\nplot_fixed_posterior(temp_post, model = temper_model, xlabel = \"Score\", fixed_eff = \"score\")"
  },
  {
    "objectID": "subclinical.html#calculate-subclinical",
    "href": "subclinical.html#calculate-subclinical",
    "title": "Subclinical Phase",
    "section": "Calculate Subclinical",
    "text": "Calculate Subclinical\nStudy-wide rates. These estimates are the results from the Incubation and Latent analyses.\n\n\nHide code\n# from other analysis\nincubation_samples <- readRDS(here(\"assets/incubation_samples.rds\"))\nlatent_samples <- readRDS(here(\"assets/latent_samples.rds\"))\nmedian_incubation <- readRDS(here(\"assets/incubation_median.rds\"))\nmedian_latent <- readRDS(here(\"assets/latent_median.rds\")) \n \nmedian_subclinical <- Map(function(x, y) x - y, median_incubation, median_latent)\n\nmedians_df <- as.data.frame(\n  rbind(\n    Incubation = as.data.frame(median_incubation),\n    Subclinical = as.data.frame(median_subclinical),\n    Latent = as.data.frame(median_latent)\n  )\n)\n\nmedians_df\n\n\n\n\n\n\n\nquant0.025\nquant0.25\nquant0.5\nquant0.75\nquant0.975\n\n\n\n\nIncubation\n1.501\n2.301\n2.901\n3.601\n5.901\n\n\nSubclinical\n1.000\n1.400\n1.700\n2.100\n3.400\n\n\nLatent\n0.501\n0.901\n1.201\n1.501\n2.501\n\n\n\n\n\n\nHide code\nmedians_df$Name <- rownames(medians_df)\nmedians_df$Name <- ordered(factor(medians_df$Name), c(\"Latent\", \"Subclinical\", \"Incubation\"))\n\n\nSubclinical by group. These estimates are the results from the Incubation and Latent analyses.\n\n\nHide code\nincubation_aft <- readRDS(here(\"assets/incubation_aft_median.rds\"))\nlatent_aft <- readRDS(here(\"assets/latent_aft_median.rds\"))  \n\nincu_grps <- incubation_aft \nlatent_grps <- latent_aft[,3:8]\n\nsubclin_grps <- incu_grps %>%\n  inner_join(latent_grps, by = \"Group\", suffix = c(\"_incu\", \"_latent\")) %>%\n  mutate(\n    Q_0.025 = Q_0.025_incu - Q_0.025_latent,\n    Q_0.25  = Q_0.25_incu - Q_0.25_latent,\n    Q_0.5   = Q_0.5_incu - Q_0.5_latent,\n    Q_0.75  = Q_0.75_incu - Q_0.75_latent,\n    Q_0.975 = Q_0.975_incu - Q_0.975_latent,\n    Phase = \"Subclinical\"\n  ) %>%\n  select(Phase, Group, Q_0.025, Q_0.25, Q_0.5, Q_0.75, Q_0.975)\n\nsubclin_grps\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPhase\nGroup\nQ_0.025\nQ_0.25\nQ_0.5\nQ_0.75\nQ_0.975\n\n\n\n\nSubclinical\nstudy\n1.3635400\n1.7093057\n1.9020377\n2.116677\n2.648249\n\n\nSubclinical\ndonor\n1.6419888\n2.1329785\n2.4793733\n2.785928\n3.459646\n\n\nSubclinical\nGroup 2\n2.4473436\n3.1525713\n3.5842509\n4.013332\n5.051369\n\n\nSubclinical\nGroup 3\n0.6910402\n0.8361282\n0.9309622\n1.098180\n1.452167\n\n\nSubclinical\nGroup 4\n0.9921016\n1.2109766\n1.3450047\n1.553879\n2.018282\n\n\n\n\n\n\nHide code\nincu_grps$Phase <- \"Incubation\" \nlatent_grps$Phase <- \"Latent\"\n  \nall_grps_w <- rbind(latent_grps, incu_grps, subclin_grps)\n\n\nPlot study-wide median phases\n\n\nHide code\nplot_median_phases(medians_df)\n\n\n\n\n\nPlot subclinical curve based on study-wide rates.\n\n\nHide code\nplot_compare_marginals(incubation_samples, latent_samples)\n\n\n\n\n\nPlot treatment-specific subclinical estimates from AFT models.\n\n\nHide code\nplot_group_phases(all_grps_w)\n\n\n\n\n\nsave subclinical estimates\n\n\nHide code\nsaveRDS(all_grps_w, here(\"assets/subclinical_w.rds\"))"
  },
  {
    "objectID": "serial_interval.html#clinical-onset",
    "href": "serial_interval.html#clinical-onset",
    "title": "Fractional Subclinical Transmsisson",
    "section": "Clinical Onset",
    "text": "Clinical Onset\nThe find_clinical_onset() function identifies first occurrence of score > 0 then creates new “Event” column with 1 at this date, 0’s before this date, and a value 3 after that date.\n\n\nHide code\nclin_start_df <- as.data.frame(\n  find_clinical_onset(antem_df)\n)\n\nonsets_df <- clin_start_df %>% \n  filter(Event == 1)"
  },
  {
    "objectID": "serial_interval.html#descriptive",
    "href": "serial_interval.html#descriptive",
    "title": "Serial Interval",
    "section": "Descriptive",
    "text": "Descriptive\n\n\nHide code\nemp_incub_periods_df <- clin_start_df %>%\n  group_by(animal, group) %>%\n  summarise(\n    incubation_period = if (nrow(filter(cur_data(), Event == 1)) == 0) {\n      NA\n    } else {\n      as.numeric(\n        filter(cur_data(), Event == 1)$date - filter(cur_data(), dpe == 0)$date\n      )\n    }\n  ) %>%\n  ungroup()\n\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `incubation_period = if (...) NULL`.\nℹ In group 1: `animal = \"BR23-17\"` and `group = \"donor\"`.\nCaused by warning:\n! `cur_data()` was deprecated in dplyr 1.1.0.\nℹ Please use `pick()` instead."
  },
  {
    "objectID": "serial_interval.html#empiracal-si",
    "href": "serial_interval.html#empiracal-si",
    "title": "Serial Interval",
    "section": "Empiracal SI",
    "text": "Empiracal SI\n\n\nHide code\ndonors <- onsets_df[onsets_df$group == \"donor\", ]\nsecondary <- onsets_df[onsets_df$group != \"donor\", ]\n\nserial_intervals <- list()\n\n# Loop over each donor\nfor (i in 1:nrow(donors)) {\n  donor_date <- donors$date[i]\n  donor_animal <- donors$animal[i]\n  \n  # Calculate the serial intervals for each secondary case\n  intervals <- secondary$date - donor_date\n  \n  # Store the results in the list, including the \"group\" column\n  serial_intervals[[donor_animal]] <- data.frame(\n    donor = donor_animal,\n    secondary_animal = secondary$animal,\n    group = secondary$group,\n    serial_interval = as.numeric(intervals)\n  )\n}\n\n# Combine the results into a single dataframe\nserial_intervals_df <- do.call(rbind, serial_intervals)\n\n\nrange(serial_intervals_df$serial_interval)\n\n\n[1] 1 3\n\n\nHide code\nserial_intervals_df %>%\n  group_by(group) %>%\n  summarize(group_mean = mean(serial_interval))\n\n\n\n\n\n\ngroup\ngroup_mean\n\n\n\n\nGroup 2\n2.666667\n\n\nGroup 3\n1.000000\n\n\nGroup 4\n2.500000\n\n\n\n\n\n\nHide code\nserial_intervals_df %>%\n  group_by(donor) %>%\n  summarize(donor_mean = mean(serial_interval))\n\n\n\n\n\n\ndonor\ndonor_mean\n\n\n\n\nBR23-17\n2\n\n\nBR23-18\n2\n\n\n\n\n\n\n\n\nHide code\nlibrary(fitdistrplus)\n\n\nLoading required package: MASS\n\n\n\nAttaching package: 'MASS'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\nLoading required package: survival\n\n\nHide code\n# Fit a gamma distribution to the serial interval data\nfit <- fitdist(serial_intervals_df$serial_interval, \"gamma\")\n\n# Display the fit summary\nsummary(fit)\n\n\nFitting of the distribution ' gamma ' by maximum likelihood \nParameters : \n      estimate Std. Error\nshape 4.939817  1.4419287\nrate  2.469819  0.7588687\nLoglikelihood:  -27.33323   AIC:  58.66645   BIC:  60.84853 \nCorrelation matrix:\n          shape      rate\nshape 1.0000000 0.9500167\nrate  0.9500167 1.0000000\n\n\nHide code\n# Plot the fit\nplot(fit)\n\n\n\n\n\n\n\nHide code\nggplot(serial_intervals_df, aes(x = serial_interval)) +\n  geom_histogram(aes(y = ..density..), binwidth = 1, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  geom_density(color = \"red\", size = 1) +\n  labs(title = \"Probability Distribution of Serial Intervals\",\n       x = \"Serial Interval (days)\",\n       y = \"Probability Density\") +\n  theme_minimal()\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: The dot-dot notation (`..density..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(density)` instead."
  },
  {
    "objectID": "serial_interval.html#empiracal-incubation-period",
    "href": "serial_interval.html#empiracal-incubation-period",
    "title": "Fractional Subclinical Transmsisson",
    "section": "Empiracal Incubation Period",
    "text": "Empiracal Incubation Period\n\n\nHide code\nempirical_incub_periods <- clin_start_df %>%\n  group_by(animal, group) %>%\n  summarise(\n    incubation_period = if (nrow(filter(pick(everything()), Event == 1)) == 0) {\n      NA\n    } else {\n      as.numeric(\n        filter(pick(everything()), Event == 1)$date - filter(pick(everything()), dpe == 0)$date\n      )\n    }\n  ) %>%\n  ungroup()\n\ngroup_incu <- as.data.frame(\n  empirical_incub_periods %>%\n  group_by(group) %>%\n  summarise(mean_incu = mean(incubation_period, na.rm=T),\n            sd_incu = sd(incubation_period, na.rm=T)) %>%\n    filter(group %in% c(\"Group 2\", \"Group 3\", \"Group 4\"))\n  ) \n\nemp_incub <- empirical_incub_periods %>%\n  filter(is.na(incubation_period) == FALSE)"
  },
  {
    "objectID": "serial_interval.html#empirical-serial-interval",
    "href": "serial_interval.html#empirical-serial-interval",
    "title": "Fractional Subclinical Transmsisson",
    "section": "Empirical Serial Interval",
    "text": "Empirical Serial Interval\n\n\nHide code\ndonors <- onsets_df[onsets_df$group == \"donor\", ]\nsecondary <- onsets_df[onsets_df$group != \"donor\", ]\n\nserial_intervals <- list()\n# loop over each donor\nfor (i in 1:nrow(donors)) {\n  donor_date <- donors$date[i]\n  donor_animal <- donors$animal[i]\n  \n  # serial intervals\n  intervals <- secondary$date - donor_date\n  \n  serial_intervals[[donor_animal]] <- data.frame(\n    donor = donor_animal,\n    secondary = secondary$animal,\n    group = secondary$group,\n    serial_interval = as.numeric(intervals)\n  )\n}\n\nserial_intervals_df <- do.call(rbind, serial_intervals)\n\nrange(serial_intervals_df$serial_interval)\n\n\n[1] 1 3\n\n\nHide code\ngroup_si <- as.data.frame(\n  serial_intervals_df %>%\n  group_by(group) %>%\n  summarize(si_mean = mean(serial_interval),\n            si_sd = sd(serial_interval)) %>%\n    filter(group %in% c(\"Group 2\", \"Group 3\", \"Group 4\"))\n)\n\ngroup_means <- left_join(group_incu, group_si, by = \"group\")"
  },
  {
    "objectID": "serial_interval.html#bootstrap-preclinical-fraction",
    "href": "serial_interval.html#bootstrap-preclinical-fraction",
    "title": "Fractional Subclinical Transmsisson",
    "section": "Bootstrap Preclinical Fraction",
    "text": "Bootstrap Preclinical Fraction\n\n\nHide code\nboot_out <- bootstrap_preclinical_frac(group_means)\n\nboot_out$plot"
  },
  {
    "objectID": "overview.html",
    "href": "overview.html",
    "title": "Overview",
    "section": "",
    "text": "Under Active Development\n\n\n\nThis site includes exploratory analyses, has not been verified, and is subject to change."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "FMDV Preclinical",
    "section": "",
    "text": "Under Peer-Review\n\n\n\nThis site overviews and provides demonstrative analyses for work that is currently subject to peer-review and subject to change."
  },
  {
    "objectID": "preprocess.html#anova",
    "href": "preprocess.html#anova",
    "title": "Data Preprocessing",
    "section": "ANOVA",
    "text": "ANOVA\nTo evaluate the differences in nasal, serum, and lesion score among groups and over time, repeated measures ANOVAs were applied using the ezANOVA() function from the ez R-package. The analyses included within-subjects (days post-exposure, dpe) and between-subjects (group) factors, with nasal, serum, and lesion scores as the dependent variables. Mauchly’s test was conducted to test the assumption of sphericity. Where violations were found, Greenhouse-Geisser and Huynh-Feldt corrections were applied.\nPrepare Data\n\n\nHide code\ncontact_groups <- antem_df %>%\n  filter(group %in% c(\"Group 2\", \"Group 3\", \"Group 4\")) %>%\n  select(animal, group, nasal, serum, dpe, score) %>%\n  mutate(\n    score = replace_na(score, 0)) %>%\n  drop_na() %>%\n  mutate(\n    score = replace_na(score, 0),          \n    nasal = replace(nasal, nasal == 45, 0), # 45 indicates no detection\n    serum = replace(serum, serum == 45, 0),\n    dpe = as.factor(dpe),                   \n    animal = as.factor(animal),            \n    group = as.factor(group)                \n  ) %>%\n  as.data.frame()\n\n\n\nNasalSerumScore\n\n\nResults indicate that nasal virus quantity differed significantly between the groups and across the days post-exposure, with an interaction effect suggesting that the temporal pattern of virus quantity varied among the groups.\n\n\nHide code\nnasal_anova <- ez::ezANOVA(data = contact_groups, dv = .(nasal), wid = .(animal), within = .(dpe), between = .(group))\nnasal_anova\n\n\n$ANOVA\n     Effect DFn DFd         F            p p<.05       ges\n2     group   2   9  9.223642 6.619789e-03     * 0.2693092\n3       dpe   6  54 33.985994 1.195097e-16     * 0.7559307\n4 group:dpe  12  54  5.531737 4.748785e-06     * 0.5020495\n\n$`Mauchly's Test for Sphericity`\n     Effect           W           p p<.05\n3       dpe 0.002507464 0.007421478     *\n4 group:dpe 0.002507464 0.007421478     *\n\n$`Sphericity Corrections`\n     Effect       GGe        p[GG] p[GG]<.05       HFe        p[HF] p[HF]<.05\n3       dpe 0.4698995 7.240063e-09         * 0.7063488 2.378893e-12         *\n4 group:dpe 0.4698995 1.041644e-03         * 0.7063488 9.172502e-05         *\n\n\n\n\nResults suggest that while there were no significant differences between groups, there were significant changes over time, and the pattern of these changes differed significantly among the groups.\n\n\nHide code\nserum_anova <- ez::ezANOVA(data = contact_groups, dv = .(serum), wid = .(animal), within = .(dpe), between = .(group))\nserum_anova\n\n\n$ANOVA\n     Effect DFn DFd         F            p p<.05       ges\n2     group   2   9  2.789541 1.141052e-01       0.1386202\n3       dpe   6  54 25.182482 5.082150e-14     * 0.6744439\n4 group:dpe  12  54  7.951312 2.761527e-08     * 0.5667711\n\n$`Mauchly's Test for Sphericity`\n     Effect            W            p p<.05\n3       dpe 1.265279e-05 6.228482e-08     *\n4 group:dpe 1.265279e-05 6.228482e-08     *\n\n$`Sphericity Corrections`\n     Effect       GGe        p[GG] p[GG]<.05       HFe        p[HF] p[HF]<.05\n3       dpe 0.2446423 7.610504e-05         * 0.2805428 2.727829e-05         *\n4 group:dpe 0.2446423 2.894414e-03         * 0.2805428 1.633022e-03         *\n\n\n\n\nResults indicate that lesion scores differed significantly between the groups and across the days post-exposure, with an interaction effect suggesting that the temporal pattern of lesion severity varied among the groups.\n\n\nHide code\nscore_anova <- ez::ezANOVA(data = contact_groups, dv = .(score), wid = .(animal), within = .(dpe), between = .(group))\nscore_anova\n\n\n$ANOVA\n     Effect DFn DFd         F            p p<.05       ges\n2     group   2   9  5.860606 2.345433e-02     * 0.2550442\n3       dpe   6  54 45.873199 1.823174e-19     * 0.7897890\n4 group:dpe  12  54  3.038905 2.531711e-03     * 0.3323484\n\n$`Mauchly's Test for Sphericity`\n     Effect            W            p p<.05\n3       dpe 6.163627e-19 5.763765e-47     *\n4 group:dpe 6.163627e-19 5.763765e-47     *\n\n$`Sphericity Corrections`\n     Effect       GGe        p[GG] p[GG]<.05       HFe        p[HF] p[HF]<.05\n3       dpe 0.4739793 2.829807e-10         * 0.7157848 1.639730e-14         *\n4 group:dpe 0.4739793 2.364298e-02         * 0.7157848 8.310038e-03         *"
  },
  {
    "objectID": "preprocess.html#nasal",
    "href": "preprocess.html#nasal",
    "title": "Preprocessing",
    "section": "Nasal",
    "text": "Nasal\n\n\nHide code\nnasal_anova <- ez::ezANOVA(data = contact_groups, dv = .(nasal), wid = .(animal), within = .(dpe), between = .(group))\n\n\nWarning: You have removed one or more levels from variable \"dpe\". Refactoring\nfor ANOVA.\n\n\nHide code\n#| label: tbl-nasal_anova\n#| tbl-cap: Results indicate that nasal virus quantity differed significantly between the groups and across the days post-exposure, with an interaction effect suggesting that the temporal pattern of virus quantity varied among the groups. \n\napaTables::apa.ezANOVA.table(nasal_anova,\n                             table.title = \"Nasal\")\n\n\n\n\nNasal \n\n   Predictor df_num df_den Epsilon     F    p ges\n       group   2.00   9.00          9.22 .007 .27\n         dpe   2.82  25.37    0.47 33.99 .000 .76\n group x dpe   5.64  25.37    0.47  5.53 .001 .50\n\nNote. df_num indicates degrees of freedom numerator. df_den indicates degrees of freedom denominator. \nEpsilon indicates Greenhouse-Geisser multiplier for degrees of freedom, \np-values and degrees of freedom in the table incorporate this correction.\nges indicates generalized eta-squared."
  },
  {
    "objectID": "preprocess.html#serum",
    "href": "preprocess.html#serum",
    "title": "Preprocessing",
    "section": "Serum",
    "text": "Serum\n\n\nHide code\nserum_anova <- ez::ezANOVA(data = contact_groups, dv = .(serum), wid = .(animal), within = .(dpe), between = .(group))\n\n\nWarning: You have removed one or more levels from variable \"dpe\". Refactoring\nfor ANOVA.\n\n\nHide code\n#| label: tbl-serum_anova\n#| tbl-cap: Results suggest that while there were no significant differences between groups, there were significant changes over time, and the pattern of these changes differed significantly among the groups.  \n#| \napaTables::apa.ezANOVA.table(serum_anova,\n                             table.title = \"Serum\")\n\n\n\n\nSerum \n\n   Predictor df_num df_den Epsilon     F    p ges\n       group   2.00   9.00          2.79 .114 .14\n         dpe   1.47  13.21    0.24 25.18 .000 .67\n group x dpe   2.94  13.21    0.24  7.95 .003 .57\n\nNote. df_num indicates degrees of freedom numerator. df_den indicates degrees of freedom denominator. \nEpsilon indicates Greenhouse-Geisser multiplier for degrees of freedom, \np-values and degrees of freedom in the table incorporate this correction.\nges indicates generalized eta-squared."
  },
  {
    "objectID": "preprocess.html#score",
    "href": "preprocess.html#score",
    "title": "Preprocessing",
    "section": "Score",
    "text": "Score\n\n\nHide code\nscore_anova <- ez::ezANOVA(data = contact_groups, dv = .(score), wid = .(animal), within = .(dpe), between = .(group))\n\n\nWarning: You have removed one or more levels from variable \"dpe\". Refactoring\nfor ANOVA.\n\n\nHide code\n#| label: tbl-score_anova\n#| tbl-cap: Results indicate that lesion scores differed significantly between the groups and across the days post-exposure, with an interaction effect suggesting that the temporal pattern of lesion severity varied among the groups. \n#| \napaTables::apa.ezANOVA.table(score_anova,\n                             table.title = \"Score\")\n\n\n\n\nScore \n\n   Predictor df_num df_den Epsilon     F    p ges\n       group   2.00   9.00          5.86 .023 .26\n         dpe   2.84  25.59    0.47 45.87 .000 .79\n group x dpe   5.69  25.59    0.47  3.04 .024 .33\n\nNote. df_num indicates degrees of freedom numerator. df_den indicates degrees of freedom denominator. \nEpsilon indicates Greenhouse-Geisser multiplier for degrees of freedom, \np-values and degrees of freedom in the table incorporate this correction.\nges indicates generalized eta-squared."
  },
  {
    "objectID": "incubation.html#aft-treament-effects",
    "href": "incubation.html#aft-treament-effects",
    "title": "Incubation Phase",
    "section": "AFT Treament Effects",
    "text": "AFT Treament Effects\nGet treatment-level estimated duration\n\n\nHide code\naft_incubation <- incubation_aft$summary.random$group[,c(1,4,6,7,8, 10)]\nnames(aft_incubation) <- c(\"Group\",\"Q_0.025\",\"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.975\")\nmean_aft <- incubation_aft$summary.fixed$mean\n\naft_incubation[,2:6] <- exp(aft_incubation[,2:6] + mean_aft)\nstudy_wide <- exp(incubation_aft$summary.fixed[,c(3,5:7,9)])\nrownames(study_wide) <- NULL\nnames(study_wide) <- c(\"Q_0.025\",\"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.975\")\nstudy_wide$Group <- \"study\"\naft_incubation <- rbind(study_wide, aft_incubation)\naft_incubation\n\n\n\n\n\n\nQ_0.025\nQ_0.25\nQ_0.5\nQ_0.75\nQ_0.975\nGroup\n\n\n\n\n2.289518\n2.858287\n3.170443\n3.518581\n4.405664\nstudy\n\n\n2.653615\n3.380300\n3.808423\n4.301140\n5.558763\ndonor\n\n\n3.506350\n4.422156\n4.962956\n5.582167\n7.161666\nGroup 2\n\n\n1.464660\n1.880941\n2.116881\n2.376889\n2.997234\nGroup 3\n\n\n1.765721\n2.255789\n2.530923\n2.832588\n3.563349\nGroup 4\n\n\n\n\n\n\nCompare treatment groups\n\n\nHide code\nplot_aft_linerange(incubation_aft, ylabel = \"Duration (days)\")\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nsave incubation samples\n\n\nHide code\nsaveRDS(incubation_samples, here(\"assets/incubation_samples.rds\"))\nsaveRDS(median_incubation, here(\"assets/incubation_median.rds\"))\nsaveRDS(aft_incubation, here(\"assets/incubation_aft_median.rds\"))"
  },
  {
    "objectID": "incubation.html#models",
    "href": "incubation.html#models",
    "title": "Incubation Phase",
    "section": "Models",
    "text": "Models\nCreating a survival model object to ensure time and censored animals are correctly indicated.\n\n\nHide code\nsurv_obj <- inla.surv(clin_start_df$scaled_duration, clin_start_df$Event)\n\n\n\nParametric SuvivalAccelerated Failure Time (AFT)\n\n\nParametric model for study-wide average duration.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(0.5, 0.001)))\n\nincubation_dur <- inla(surv_obj ~ 1 + \n                         f(shed_time, donor_shed,\n                           model = \"rw1\",\n                           constr=TRUE,\n                           scale.model = TRUE,\n                           hyper=pc_prec_iid),\n                        data = clin_start_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"exponential.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\n\n\nTreatment is specific to group therefore using group below to identify important differences.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(0.5, 0.001)))\n\nincubation_aft <- inla(surv_obj ~ 1 +\n                       f(group,\n                           model = \"iid\",\n                           constr=FALSE,\n                           hyper=pc_prec_iid),\n                        data = clin_start_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"lognormal.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\nWarning in sqrt(ee): NaNs produced"
  },
  {
    "objectID": "incubation.html#prepare-data",
    "href": "incubation.html#prepare-data",
    "title": "Incubation Phase",
    "section": "Prepare Data",
    "text": "Prepare Data\nQuick stats to check data\n\n\nHide code\nunique(clin_start_df$Event)\n\n\n[1] 0 1 3\n\n\nHide code\ncheck_stats <- clin_start_df %>%\n  filter(Event == 1 & censor_status == 1)\n\ndim(check_stats)\n\n\n[1] 13 16\n\n\nHide code\nrange(check_stats$dpe)\n\n\n[1] 2 5\n\n\nHide code\nmean(check_stats$dpe)\n\n\n[1] 3.076923\n\n\nHide code\nmedian(check_stats$dpe)\n\n\n[1] 3\n\n\nRemove Group 1 Group 1 was not infected and has no expectation of developing disease. Animals that were infected, verified by nasal, serum, or fever but never developed lesions are censored.\n\n\nHide code\nclin_start_df <- clin_start_df %>%\n filter(group != \"Group 1\",\n         Event == 1 | censor_status == 0 & censor_k == 1)\n\n\ncheck data\n\n\nHide code\nclin_start_df %>%\n  filter(Event == 1) %>%\n  summarise(mean_dpe = mean(dpe),\n            median_dpe = median(dpe))\n\n\n\n\n\n\nmean_dpe\nmedian_dpe\n\n\n\n\n3.076923\n3\n\n\n\n\n\n\nScale Time\nAdd an arbitrarily small value to eliminate zeros. Really not need with his specific data set, by an important step.\n\n\nHide code\nclin_start_df$scaled_duration <- clin_start_df$dpe + 0.0001\n\n\nWeighted Contacts\nContact with groups by donors was sequential at 24hr intervals, shedding rates (nasal swabs) varied over this period.\n\n\nHide code\nshed_rates <- antem_df %>%\n  filter(group == \"donor\") %>%\n  group_by(dpi) %>%\n  summarise(tot_shed = sum(ifelse(nasal == 45, 0, nasal), na.rm=T)) %>%\n  mutate(group = paste(\"Group\", dpi, sep=\" \"))\n\n# match cumulative shed from donors based on time of contact\nclin_start_df$donor_shed <- with(shed_rates,\n                                 tot_shed[match(\n                                   clin_start_df$group,\n                                                 group)])\n\n# an integer index is needed for modeling purposes, group contacts are 1:1 correlated with time\nclin_start_df$shed_time <- as.integer(as.factor(clin_start_df$group))"
  },
  {
    "objectID": "latent.html#prepare-data",
    "href": "latent.html#prepare-data",
    "title": "Latent Phase",
    "section": "Prepare Data",
    "text": "Prepare Data\nScale Time Add an arbitrarily small value to eliminate zeros. Really not need with his specific data set, by an important step.\n\n\nHide code\nlatent_end_df$scaled_duration <- latent_end_df$dpe + 0.0001\n\n\nScale Serum Scaling serum as potential covariate.\n\n\nHide code\nlatent_end_df$serum_0 <- latent_end_df$serum\nlatent_end_df$serum_0[latent_end_df$serum_0 == 45] = 0\nlatent_end_df$serum_0 <- as.numeric(scale(latent_end_df$serum_0, scale = T, center = F))"
  },
  {
    "objectID": "latent.html#models",
    "href": "latent.html#models",
    "title": "Latent Phase",
    "section": "Models",
    "text": "Models\nResponse Variable Creating a survival object to ensure time and censored animals are correctly indicated.\n\n\nHide code\nsurv_obj <- inla.surv(latent_end_df$scaled_duration, latent_end_df$latent_end)\n\n\n\nParametric SuvivalAccelerated Failure Time (AFT)\n\n\nParametric model for study-wide average duration.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\nlatent_end_mod <- inla(surv_obj ~ 1 + serum_0,\n                        data = latent_end_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"exponential.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\n\n\nTreatment is specific to group therefore using group below to identify important differences.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(1, 0.001)))\n\nlatent_aft_mod <- inla(surv_obj ~ 1 +\n                       f(group,\n                           model = \"iid\",\n                           constr=FALSE,\n                           hyper=pc_prec_iid),\n                        data = latent_end_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"lognormal.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))"
  },
  {
    "objectID": "latent.html#aft-treament-effects",
    "href": "latent.html#aft-treament-effects",
    "title": "Latent Phase",
    "section": "AFT Treament Effects",
    "text": "AFT Treament Effects\nGet treatment-level estimated duration\n\n\nHide code\naft_latent <- latent_aft_mod$summary.random$group[,c(1:4,6,7,8, 10)]\nnames(aft_latent) <- c(\"Group\",\"Mean\", \"sd\", \"Q_0.025\",\"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.975\")\nmean_aft <- latent_aft_mod$summary.fixed$mean\n\naft_latent[,2:8] <- exp(aft_latent[,2:8] + mean_aft)\nstudy_wide <- exp(latent_aft_mod$summary.fixed[,c(1:3, 5:7, 9)])\nrownames(study_wide) <- NULL\nnames(study_wide) <- c(\"Mean\", \"sd\", \"Q_0.025\",\"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.975\")\nstudy_wide$Group <- \"study\"\naft_latent <- rbind(study_wide, aft_latent)\naft_latent\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMean\nsd\nQ_0.025\nQ_0.25\nQ_0.5\nQ_0.75\nQ_0.975\nGroup\n\n\n\n\n1.270207\n1.173833\n0.9259857\n1.148989\n1.268414\n1.401915\n1.757435\nstudy\n\n\n1.381136\n1.517493\n1.0116252\n1.247324\n1.329053\n1.515215\n2.099118\ndonor\n\n\n1.420993\n1.509849\n1.0590048\n1.269587\n1.378708\n1.568838\n2.110296\nGroup 2\n\n\n1.149395\n1.507885\n0.7736175\n1.044813\n1.185920\n1.278711\n1.545068\nGroup 3\n\n\n1.149395\n1.507885\n0.7736175\n1.044813\n1.185920\n1.278711\n1.545068\nGroup 4\n\n\n\n\n\n\nCompare treatment groups\n\n\nHide code\nplot_aft_linerange(latent_aft_mod, y_min = 0, y_max = 2.5, brks = 0.5, ylimit = 2.5)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nsave latent samples\n\n\nHide code\nsaveRDS(latent_samples, here(\"assets/latent_samples.rds\"))\nsaveRDS(median_latent, here(\"assets/latent_median.rds\"))\nsaveRDS(aft_latent, here(\"assets/latent_aft_median.rds\"))"
  },
  {
    "objectID": "compartmental.html#seiir-model",
    "href": "compartmental.html#seiir-model",
    "title": "Compartmental Models",
    "section": "SEIIR Model",
    "text": "SEIIR Model\nBasic model\n\n\nHide code\nseiir_model <- function(times, state, parameters) {\n  with(as.list(c(state, parameters)), {\n\n    dS <- -beta * S * (I_sub + I_clin) / N\n    dE <- beta * S * (I_sub + I_clin) / N - sigma * E\n    dI_sub <- p_sub * sigma * E - lambda * I_sub\n    dI_clin <- (1 - p_sub) * sigma * E + lambda * I_sub - gamma_clin * I_clin\n    dR <- gamma_clin * I_clin\n    \n    sub_inc <- p_sub * sigma * E\n    clin_inc <- (1 - p_sub) * sigma * E + lambda * I_sub\n\n    list(c(dS, dE, dI_sub, dI_clin, dR), sub_inc = sub_inc, clin_inc = clin_inc)\n  })\n}\n\n# initial values\ninitial_state <- c(\n  S = 999,\n  E = 1,\n  I_sub = 0,\n  I_clin = 0,\n  R = 0\n)\n\n# sampling distributions\nparam_distributions <- list(\n  beta_meanlog = log(0.3), beta_sdlog = 0.1, # ??\n  sigma_meanlog = log(1/1.3290530), sigma_sdlog = 0.1, # study average per AFT\n  lambda_meanlog = log(1/2.4793733), lambda_sdlog = 0.1, # study average per AFT\n  gamma_clin_meanlog = log(1/10.8), gamma_clin_sdlog = 0.1, # Shankar's 2019\n  p_sub_shape1 = 10, p_sub_shape2 = 5, # prob of I_sub -> I_clin ~0.68-0.75\n  N = 1000 # herd size\n)"
  },
  {
    "objectID": "compartmental.html#run-simulation",
    "href": "compartmental.html#run-simulation",
    "title": "Compartmental Models",
    "section": "Run Simulation",
    "text": "Run Simulation\n\n\nHide code\nfull_results <- simulate_SEIIR_intervention(seiir_model,\n                                            param_distributions,\n                                            initial_state,\n                                            n_iterations = 1000,\n                                            timesteps = 200)\n\n\nPlot dynamics\n\n\nHide code\nplot_seiir_dynamics(full_results$summary, plot_title = \"Burn Through\")\n\n\n\n\n\nPlot incidence\n\n\nHide code\nratio_out <- calculate_ratio_subclinical(full_results$summary)\nratio_out$total[2]/ratio_out$total[1]\n\n\n[1] 0.6383648\n\n\nHide code\nplot_incidence_bar(full_results$summary)"
  },
  {
    "objectID": "compartmental.html#simulation-with-intervention",
    "href": "compartmental.html#simulation-with-intervention",
    "title": "Compartmental Models",
    "section": "Simulation with Intervention",
    "text": "Simulation with Intervention\n\n\nHide code\ninterv_results <- simulate_SEIIR_intervention(seiir_model,\n                                              param_distributions,\n                                              initial_state,\n                                              n_iterations = 1000,\n                                              timesteps = 200,\n                                              detect = 3, # when clinical cases >= detect, 3 per Backer 2012\n                                              vacc_effect = 0.20, # effectiveness\n                                              immune_param = c(7, 1) # mean and sd for delay before immunity\n                                              )\n\n\nTime of intervention\n\n\nHide code\ninterv_time <- interv_results$all_results %>%\n  filter(I_clin >= 3) %>%\n  slice_head(n = 1) %>%\n  pull(time)\n\ninterv_time\n\n\n[1] 13\n\n\nPlot intervention dynamics\n\n\nHide code\nplot_seiir_dynamics(interv_results$summary, plot_title = \"Intervention\", vline=interv_time)\n\n\n\n\n\nPlot incidence\n\n\nHide code\nratio_out <- calculate_ratio_subclinical(interv_results$summary)\nratio_out$total[2]/ratio_out$total[1]\n\n\n[1] 0.6367239\n\n\nHide code\nplot_incidence_bar(interv_results$summary)"
  },
  {
    "objectID": "index.html#contents",
    "href": "index.html#contents",
    "title": "FMDV Preclinical",
    "section": "Contents:",
    "text": "Contents:\nUse the below links or tabs above to navigate to different sections of the analysis.\n- Data Preprocessing: Preparing data collected during animal experiment.\n- Durations: Estimating phase durations.\n- Room-to-Room: ABM Simulation of FMDV transmission through room-to-room contacts as performed during the animal experiment.\n- Within-Herd: ABM Simulation of FMDV transmission within a cattle herd assuming homogeneous mixing.\n- Between-Farm: ABM Simulation of FMDV transmission between farms related by a network. Farms are subject to quarantine and cattle movements."
  },
  {
    "objectID": "incubation.html#incubation-phase",
    "href": "incubation.html#incubation-phase",
    "title": "Phase Duration",
    "section": "Incubation Phase",
    "text": "Incubation Phase\n\nClinical Onset\nThe find_clinical_onset() function identifies first occurrence of score > 0 then creates new “Event” column with 1 at this date, 0’s before this date, and a value 3 after that date.\n\n\nHide code\nclin_start_df <- as.data.frame(\n  find_clinical_onset(antem_df)\n)\n\n\n\n\nPrepare Data\nRemove Group 1: This group was not infected and has no expectation of developing disease.\n\n\nHide code\nclin_start_df <- clin_start_df %>%\n filter(group != \"Group 1\",\n         Event == 1 | censor_status == 0 & censor_k == 1)\n\n\nScale Time\nAdd an arbitrarily small value to eliminate zeros. Really not need with his specific data set, by an important step.\n\n\nHide code\nclin_start_df$scaled_duration <- clin_start_df$dpe + 0.0001\n\n\nWeighted Contacts\nContact with groups by donors was sequential at 24hr intervals, shedding rates (nasal swabs) varied over this period.\n\n\nHide code\nshed_rates <- antem_df %>%\n  filter(group == \"donor\") %>%\n  group_by(dpi) %>%\n  summarise(tot_shed = sum(ifelse(nasal == 45, 0, nasal), na.rm=T)) %>% # 45 indicates non-detection\n  mutate(group = paste(\"Group\", dpi, sep=\" \"))\n\n# match cumulative shed from donors based on time of contact\nclin_start_df$donor_shed <- with(shed_rates,\n                                 tot_shed[match(\n                                   clin_start_df$group,\n                                                 group)])\n\n# an integer index is needed, group contacts are correlated with time\nclin_start_df$shed_time <- as.integer(as.factor(clin_start_df$group))\n\n\n\n\nSurvival Models\nCreating a survival model object.\n\n\nHide code\nsurv_obj <- inla.surv(clin_start_df$scaled_duration, clin_start_df$Event)\n\n\n\nParametric SuvivalAccelerated Failure Time (AFT)\n\n\nParametric model for study-wide average duration.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(0.5, 0.001)))\n\nincubation_dur <- inla(surv_obj ~ 1 + \n                         f(shed_time, donor_shed,\n                           model = \"rw1\",\n                           constr=TRUE,\n                           scale.model = TRUE,\n                           hyper=pc_prec_iid),\n                        data = clin_start_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"exponential.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\n\n\nAn additional confirmatory model framework.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(0.5, 0.001)))\n\nincubation_aft <- inla(surv_obj ~ 1 +\n                       f(group,\n                           model = \"iid\",\n                           constr=FALSE,\n                           hyper=pc_prec_iid),\n                        data = clin_start_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"lognormal.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\n\n\n\n\n\nSample Marginals\nPerforming sampling on the parametric model results\n\n\nHide code\nincubation_samples <- compute_survival_marginals(incubation_dur, 14)\n\n\nCheck estimates at the 0.5 probability (median)\n\n\nHide code\nmedian_incubation <- find_closest_quant(incubation_samples, 0.5)\n\n\n\n\nIncubation Curve\nExceedance survival curve.\n\n\nHide code\nplot_survival_marginals(incubation_samples, x_max = 14, xlabel = \"Incubation Phase Duration\")\n\n\n\n\n\nsave incubation samples:\nThese files are saved on the project’s /assetsdirectory for later use.\n\n\nHide code\nsaveRDS(incubation_samples, here(\"assets/incubation_samples.rds\"))\nsaveRDS(median_incubation, here(\"assets/incubation_median.rds\"))\nsaveRDS(aft_incubation, here(\"assets/incubation_aft_median.rds\"))"
  },
  {
    "objectID": "incubation.html#latent-phase",
    "href": "incubation.html#latent-phase",
    "title": "Phase Duration",
    "section": "Latent Phase",
    "text": "Latent Phase\n\nPrepare Data\nOrganize data\n\n\nHide code\nlatent_end_df <- antem_df %>%\n  filter(nasal >= 4.5 & nasal != 45) %>%\n  group_by(animal) %>%\n  filter(date == min(date)) %>%\n  mutate(latent_end = 1) %>%\n  ungroup()\n\n\nScale Time (as prior use)\n\n\nHide code\nlatent_end_df$scaled_duration <- latent_end_df$dpe + 0.0001\n\n\n\n\nSurvival Models\nResponse Variable Creating a survival object.\n\n\nHide code\nsurv_obj <- inla.surv(latent_end_df$scaled_duration, latent_end_df$latent_end)\n\n\n\nParametric SuvivalAccelerated Failure Time (AFT)\n\n\nParametric model for study-wide average duration.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\nlatent_end_mod <- inla(surv_obj ~ 1,\n                        data = latent_end_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"exponential.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\n\n\nConfirmatory model for comparison.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(1, 0.001)))\n\nlatent_aft_mod <- inla(surv_obj ~ 1 +\n                       f(group,\n                           model = \"iid\",\n                           constr=FALSE,\n                           hyper=pc_prec_iid),\n                        data = latent_end_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"lognormal.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\n\n\n\n\n\nSample Marginals\nPerforming sampling on the model results\n\n\nHide code\nlatent_samples <- compute_survival_marginals(latent_end_mod, 7)\n\n\nCheck estimates at the 0.5 probability (median)\n\n\nHide code\nmedian_latent <- find_closest_quant(latent_samples, 0.5)\n\n\n\n\nLatent Curve\n\n\nHide code\nplot_survival_marginals(latent_samples, x_max = 5, xlabel = \"Latent Phase Duration\")\n\n\n\n\n\nsave latent samples: These files are saved on the project’s /assetsdirectory for later use.\n\n\nHide code\nsaveRDS(latent_samples, here(\"assets/latent_samples_sim.rds\"))\nsaveRDS(median_latent, here(\"assets/latent_median_sim.rds\"))\nsaveRDS(aft_latent, here(\"assets/latent_aft_median_sim.rds\"))"
  },
  {
    "objectID": "incubation.html#subclinical",
    "href": "incubation.html#subclinical",
    "title": "Phase Duration",
    "section": "Subclinical",
    "text": "Subclinical\nComparing incubation and latent phase outcomes.\n\n\n\n\n\nHide code\nmedian_subclinical <- Map(function(x, y) x - y, median_incubation, median_latent)\n\nmedians_df <- as.data.frame(\n  rbind(\n    Incubation = as.data.frame(median_incubation),\n    Subclinical = as.data.frame(median_subclinical),\n    Latent = as.data.frame(median_latent)\n  )\n)\n\nmedians_df$Name <- rownames(medians_df)\nmedians_df$Name <- ordered(factor(medians_df$Name), c(\"Latent\", \"Subclinical\", \"Incubation\"))\n\n\n\n\n\nPlot study-wide median phases\n\n\nHide code\nplot_median_phases(medians_df)\n\n\n\n\n\nPlot subclinical curve based on study-wide rates.\n\n\nHide code\nplot_compare_marginals(incubation_samples, latent_samples)"
  },
  {
    "objectID": "rooms.html",
    "href": "rooms.html",
    "title": "Room-to-Room Transmission",
    "section": "",
    "text": "The challengeABM package includes the simulate_room_to_room() function for simulating virus transmission between cattle. At simulation start, cattle (agents) are divided among five isolated rooms, with two donor cattle in Room 1, and four cattle in each of the other rooms, Rooms 2-5. On simulation hour 1, the two donor cattle are inoculated by a virus. The donor cattle remain isolated from other cattle for a 24hr period, then at the 24hr mark, the donor cattle (now infected) are moved to Room 2. At the next 24hr interval (48 hours since start of simulation), the donor cattle leave Room 2 and proceed to Room 3, where they remain for a 24hr period. The process continues with donors moving to Room 4 at 72hrs and finally Room 5 at 96hrs. The status of individual virus loads, clinical presentation (score), and other factors are recorded on an hourly basis.\nDepending on the quantity of virus in the donor cattle and chance contacts, they may or may not infect others. The quantity of virus in nasal passages and in blood serum has been calibrated to match the experimental study described in the analysis with parameters recorded in the base_config_fmdv.yaml configuration file that is available with this script."
  },
  {
    "objectID": "rooms.html#preliminaries",
    "href": "rooms.html#preliminaries",
    "title": "Room-to-Room Transmission",
    "section": "Preliminaries",
    "text": "Preliminaries\nLoad needed libraries:\n\n\nHide code\nlibrary(here) # directory management\nlibrary(tidyverse) # data wrangling\noptions(dplyr.summarise.inform = FALSE)\nlibrary(pals) # color palettes for figures"
  },
  {
    "objectID": "rooms.html#challengeabm-package",
    "href": "rooms.html#challengeabm-package",
    "title": "Room-to-Room Transmission",
    "section": "challengeABM Package",
    "text": "challengeABM Package\nSimulation code is available here: challengeABM. The GitHub site includes an Overview, Design concepts, Details document.\n\n\nHide code\n# library(remotes)\n# remotes::install_github(\"geoepi/challengeABM\")\n\nlibrary(challengeABM)"
  },
  {
    "objectID": "rooms.html#run-the-simulation",
    "href": "rooms.html#run-the-simulation",
    "title": "Room-to-Room Transmission",
    "section": "Run the simulation",
    "text": "Run the simulation\nSet random seed for reproducible runs.\n\n\nHide code\nseed_val <- round(runif(1, 100, 1000),0)\nseed_val \n\n\n[1] 784\n\n\nHide code\nset.seed(seed_val)\n\n\nRun the simulation based using a configuration file with needed parameters..\n\n\nHide code\nmodel_result <- simulate_room_to_room(here(\"config/base_config_fmdv.yaml\"), # default parameters\n                                      num_infected = 2, # modify default to ensure 2 donors (like animal experiment)\n                                      num_hours = 360) # modify default to only run 360 time steps (hours)"
  },
  {
    "objectID": "rooms.html#within-host-dynamics",
    "href": "rooms.html#within-host-dynamics",
    "title": "Room-to-Room Transmission",
    "section": "Within-Host Dynamics",
    "text": "Within-Host Dynamics\nView change in nasal and virus quantities within individual animals.\n\n\nHide code\nplot_virus_loads_R2R(model_result)"
  },
  {
    "objectID": "rooms.html#status-of-individual-animals",
    "href": "rooms.html#status-of-individual-animals",
    "title": "Room-to-Room Transmission",
    "section": "Status of Individual Animals",
    "text": "Status of Individual Animals\nView the disease status of individual animals.\n\n\nHide code\nplot_animal_status(model_result)"
  },
  {
    "objectID": "rooms.html#group-2",
    "href": "rooms.html#group-2",
    "title": "Room-to-Room Transmission",
    "section": "Group 2",
    "text": "Group 2\nRunning the model with the below seed will produce a comparable result to the animal experiment outcome.\n\n\nHide code\nset.seed(509)\nmodel_ctgrp2 <- simulate_room_to_room(here(\"config/base_config_fmdv.yaml\"), \n                                      num_infected = 2, num_hours = 360) # same as above\n\n\n\nView Group 2\nView the disease status of Group 2 animals. Note that donors did not become infectious until after more than 48 hours post inoculation. As a result, Group 2 animals exposed to donors during the 24-48hour period did not become infected. Also note that two infected animals never progressed to clinical disease.\n\n\nHide code\nplot_animal_status(model_ctgrp2)"
  },
  {
    "objectID": "herd.html",
    "href": "herd.html",
    "title": "Within-Herd Transmission",
    "section": "",
    "text": "The challengeABM package includes the simulate_within_herd() function that is calibrated to exhibit the same within-host virus dynamics as the simulate_room_to_room() function uses for laboratory based animal experiments. At simulation start, cattle (agents) are populated to a common area with a specified number of FMDV infected individuals. On simulation hour 1, cattle begin making random contact with each other at a specified hourly rate to show homogeneous mixing.\nDepending on the quantity of virus in the donor cattle and chance contacts, they may or may not infect others. The quantity of virus in nasal passages and in blood serum has been calibrated to match the experimental study described in the analysis with parameters recorded in the default_herd_config.yaml configuration file that is available with this script."
  },
  {
    "objectID": "herd.html#challengeabm-package",
    "href": "herd.html#challengeabm-package",
    "title": "Within-Herd Transmission",
    "section": "challengeABM Package",
    "text": "challengeABM Package\nSimulation code is available here: challengeABM. The GitHub site includes an Overview, Design concepts, Details document.\n\n\nHide code\n# library(remotes)\n# remotes::install_github(\"geoepi/challengeABM\")\n\nlibrary(challengeABM)"
  },
  {
    "objectID": "herd.html#run-the-simulation",
    "href": "herd.html#run-the-simulation",
    "title": "Within-Herd Transmission",
    "section": "Run the simulation",
    "text": "Run the simulation\nSet random seed for reproducible runs.\n\n\nHide code\nseed_val <- round(runif(1, 100, 1000),0)\nseed_val \n\n\n[1] 223\n\n\nHide code\nset.seed(seed_val)\n\n\nRun the simulation based using a configuration file with required parameters. Saving a copy for fast reloading of demo results.\n\n\nHide code\nmodel_result <- simulate_within_herd(here(\"config/base_config_fmdv.yaml\"),\n                                     num_donors = 2,\n                                     preclin_infect = TRUE,\n                                     contact_rate = 0.25,\n                                     seed = seed_val)\n\nsaveRDS(model_result, here(\"local/demo/model_result_herd_2025-06-13.rds\"))\n\n\n\n\n\nDownload saved copy from OSF\n\n\nHide code\nosf_id <- osf_project_demo %>%\n  osf_ls_files() %>%\n  filter(name == \"model_result_herd_2025-06-13.rds\") # file to download\n\nosf_download(osf_id,\n             path = here(\"local/temp\"), # where to save\n             conflicts = \"overwrite\")\n\n\n\n\n\n\n\n\n\n\n\n\nname\nid\nlocal_path\nmeta\n\n\n\n\nmodel_result_herd_2025-06-13.rds\n684cc2c7559e9edbf0cc2c08\nlocal/temp/model_result_herd_2025-06-13.rds\nmodel_result_herd_2025-06-13.rds , file , /684cc2c7559e9edbf0cc2c08 , 465971 , osfstorage , /model_result_herd_2025-06-13.rds , 1749861063 , 1749861063 , c8e7d13d7d139db24cd1ae834761c9e9 , fd1ffdfec2a6406130aada6808b7f46343654eb8f2951d0b8c78147ffd5b190b , 0 , TRUE , 1 , FALSE , https://api.osf.io/v2/files/684cc2c7559e9edbf0cc2c08/ , https://files.osf.io/v1/resources/qf2wr/providers/osfstorage/684cc2c7559e9edbf0cc2c08 , https://files.osf.io/v1/resources/qf2wr/providers/osfstorage/684cc2c7559e9edbf0cc2c08 , https://files.osf.io/v1/resources/qf2wr/providers/osfstorage/684cc2c7559e9edbf0cc2c08 , https://osf.io/download/684cc2c7559e9edbf0cc2c08/ , https://mfr.osf.io/render?url=https%3A%2F%2Fosf.io%2Fdownload%2F684cc2c7559e9edbf0cc2c08%2F%3Fdirect%26mode%3Drender, https://osf.io/qf2wr/files/osfstorage/684cc2c7559e9edbf0cc2c08 , https://api.osf.io/v2/files/684cc2c7559e9edbf0cc2c08/ , https://api.osf.io/v2/files/684cb2aed0a256104638874a/ , 684cb2aed0a256104638874a , files , https://api.osf.io/v2/files/684cc2c7559e9edbf0cc2c08/versions/ , https://api.osf.io/v2/nodes/qf2wr/ , qf2wr , nodes , https://api.osf.io/v2/nodes/qf2wr/ , nodes , nodes , qf2wr , https://api.osf.io/v2/files/684cc2c7559e9edbf0cc2c08/cedar_metadata_records/\n\n\n\n\n\n\nHide code\n# read save file to environment\nmodel_result <- readRDS(here(\"local/temp/model_result_herd_2025-06-13.rds\"))"
  },
  {
    "objectID": "herd.html#within-host-dynamics",
    "href": "herd.html#within-host-dynamics",
    "title": "Within-Herd Transmission",
    "section": "Within-Host Dynamics",
    "text": "Within-Host Dynamics\nRandomly select 21 of 100 simulated animals to view nasal and virus quantities.\n\n\nHide code\nplot_individual_virus_loads(model_result, sample_n = 21)"
  },
  {
    "objectID": "herd.html#herd-outbreak-curve",
    "href": "herd.html#herd-outbreak-curve",
    "title": "Within-Herd Transmission",
    "section": "Herd Outbreak Curve",
    "text": "Herd Outbreak Curve\nCompare the number of infected and recovered individuals.\n\n\nHide code\nplot_herd_curve(model_result)"
  },
  {
    "objectID": "network.html",
    "href": "network.html",
    "title": "Between-Farm Transmission",
    "section": "",
    "text": "The challengeABM package includes the simulate_net_model() function that accepts a networkis calibrated to exhibit the same within-host virus dynamics as the simulate_room_to_room() function uses for laboratory based animal experiments. At simulation start, cattle (agents) are populated to a common area with a specified number of FMDV infected individuals. On simulation hour 1, cattle begin making random contact with each other at a specified hourly rate to show homogeneous mixing.\nDepending on the quantity of virus in the donor cattle and chance contacts, they may or may not infect others. The quantity of virus in nasal passages and in blood serum has been calibrated to match the experimental study described in the analysis with parameters recorded in the default_herd_config.yaml configuration file that is available with this script."
  },
  {
    "objectID": "network.html#challengeabm-package",
    "href": "network.html#challengeabm-package",
    "title": "Between-Farm Transmission",
    "section": "challengeABM Package",
    "text": "challengeABM Package\nSimulation code is available here: challengeABM. The GitHub site includes an Overview, Design concepts, Details document.\n\n\nHide code\n# library(remotes)\n# remotes::install_github(\"geoepi/challengeABM\")\n\nlibrary(challengeABM)"
  },
  {
    "objectID": "network.html#read-configuration-file",
    "href": "network.html#read-configuration-file",
    "title": "Between-Farm Transmission",
    "section": "Read Configuration File",
    "text": "Read Configuration File\n\n\nHide code\nconfig_file <- read_yaml(here(\"config/base_config_fmdv.yaml\"))"
  },
  {
    "objectID": "network.html#generate-network",
    "href": "network.html#generate-network",
    "title": "Between-Farm Transmission",
    "section": "Generate Network",
    "text": "Generate Network\nThe generate_farm_network() function is used to create a graph network representing the spatial relationships between farms and number of cattle in each. Nodes in the network represent farms and edges are proportional to the distance between those farms. The returned list() includes a randomized $graph network object and a $farm_df data frame with the farm labels and cattle number.\nUsing parameters in the configuration file:\nRandomized spatial arrangement\n\n\nHide code\nnet <- generate_farm_network(config_file)\n\nplot_base_network(net$graph)\n\n\n\n\n\nRandomized number of cattle\n\n\nHide code\n# dimensions\ndim(net$farm_df)\n\n\n[1] 20  3\n\n\nHide code\n# peek at data\nhead(net$farm_df)\n\n\n\n\n\n\nfarm_id\nnode_id\nherd_size\n\n\n\n\nfarm_1\n1\n277\n\n\nfarm_2\n2\n107\n\n\nfarm_3\n3\n572\n\n\nfarm_4\n4\n119\n\n\nfarm_5\n5\n552\n\n\nfarm_6\n6\n598\n\n\n\n\n\n\nHide code\n# cattle numbers\nrange(net$farm_df$herd_size)\n\n\n[1] 107 935\n\n\nOr alternatively using overrides:\n\n\nHide code\nnet_2 <- generate_farm_network(config_file,\n                               n_farms = 100,\n                               graph_type = \"smallworld\",\n                               herd_size_range = c(1000, 5000),\n                               seed = 12345)\n\nplot_base_network(net_2$graph)\n\n\n\n\n\n\n\nHide code\n# dimensions\ndim(net_2$farm_df)\n\n\n[1] 100   3\n\n\nHide code\n# peek at data\nhead(net_2$farm_df)\n\n\n\n\n\n\nfarm_id\nnode_id\nherd_size\n\n\n\n\nfarm_1\n1\n2881\n\n\nfarm_2\n2\n2152\n\n\nfarm_3\n3\n2270\n\n\nfarm_4\n4\n1432\n\n\nfarm_5\n5\n4383\n\n\nfarm_6\n6\n2880\n\n\n\n\n\n\nHide code\n# cattle numbers\nrange(net_2$farm_df$herd_size)\n\n\n[1] 1043 4955"
  },
  {
    "objectID": "network.html#run-simulation",
    "href": "network.html#run-simulation",
    "title": "Between-Farm Transmission",
    "section": "Run Simulation",
    "text": "Run Simulation\nThe simulate_net_model() functions accepts the network and disease parameters from the config file and runs the simulation. This parameterization takes 3-5 minutes to run, therefore a copy is saved for reload.\n\n\nHide code\nmodel_result <- simulate_net_model(net, config_file)\n\nsaveRDS(model_result, here(\"local/demo/model_result_2025-06-13.rds\"))\n\n\n\n\n\nDownload saved copy from OSF\n\n\nHide code\nosf_id <- osf_project_demo %>%\n  osf_ls_files() %>%\n  filter(name == \"model_result_2025-06-13.rds\") # file to download\n\nosf_download(osf_id,\n             path = here(\"local/temp\"), # where to save\n             conflicts = \"overwrite\")\n\n\n\n\n\n\n\n\n\n\n\n\nname\nid\nlocal_path\nmeta\n\n\n\n\nmodel_result_2025-06-13.rds\n684cbc31fea3288c3ab687ad\nlocal/temp/model_result_2025-06-13.rds\nmodel_result_2025-06-13.rds , file , /684cbc31fea3288c3ab687ad , 4172117 , osfstorage , /model_result_2025-06-13.rds , 1749859377 , 1749859377 , 274f06b6116b3d5bfe1088de8649938f , de11d00cab4e4f25dc259ee39b7567bfb0785b581447460e5f060a45fb15f0bf , 0 , TRUE , 1 , FALSE , https://api.osf.io/v2/files/684cbc31fea3288c3ab687ad/ , https://files.osf.io/v1/resources/qf2wr/providers/osfstorage/684cbc31fea3288c3ab687ad , https://files.osf.io/v1/resources/qf2wr/providers/osfstorage/684cbc31fea3288c3ab687ad , https://files.osf.io/v1/resources/qf2wr/providers/osfstorage/684cbc31fea3288c3ab687ad , https://osf.io/download/684cbc31fea3288c3ab687ad/ , https://mfr.osf.io/render?url=https%3A%2F%2Fosf.io%2Fdownload%2F684cbc31fea3288c3ab687ad%2F%3Fdirect%26mode%3Drender, https://osf.io/qf2wr/files/osfstorage/684cbc31fea3288c3ab687ad , https://api.osf.io/v2/files/684cbc31fea3288c3ab687ad/ , https://api.osf.io/v2/files/684cb2aed0a256104638874a/ , 684cb2aed0a256104638874a , files , https://api.osf.io/v2/files/684cbc31fea3288c3ab687ad/versions/ , https://api.osf.io/v2/nodes/qf2wr/ , qf2wr , nodes , https://api.osf.io/v2/nodes/qf2wr/ , nodes , nodes , qf2wr , https://api.osf.io/v2/files/684cbc31fea3288c3ab687ad/cedar_metadata_records/\n\n\n\n\n\n\nHide code\n# read save file to environment\nmodel_result <- readRDS(here(\"local/temp/model_result_2025-06-13.rds\"))\n\n\nExamine returned object. The returned object is a nested list, with dataframes for each farm and animal at each time step.\n\n\nHide code\nlength(model_result)\n\n\n[1] 3\n\n\nHide code\nnames(model_result)\n\n\n[1] \"farm_status\"    \"movement_log\"   \"quarantine_log\"\n\n\nHide code\nnames(model_result$farm_status)\n\n\n[1] \"herd_agents\" \"herd_states\" \"quarantined\"\n\n\nHide code\nnames(model_result$farm_status$herd_agents)\n\n\n [1] \"farm_1\"  \"farm_2\"  \"farm_3\"  \"farm_4\"  \"farm_5\"  \"farm_6\"  \"farm_7\" \n [8] \"farm_8\"  \"farm_9\"  \"farm_10\" \"farm_11\" \"farm_12\" \"farm_13\" \"farm_14\"\n[15] \"farm_15\" \"farm_16\" \"farm_17\" \"farm_18\" \"farm_19\" \"farm_20\"\n\n\nHide code\nnames(model_result$farm_status$herd_agents$farm_1)\n\n\n [1] \"id\"                              \"infection_status\"               \n [3] \"infect_agent\"                    \"is_donor\"                       \n [5] \"virus_nasal\"                     \"virus_serum\"                    \n [7] \"score_t\"                         \"nasal_threshold\"                \n [9] \"serum_threshold\"                 \"infect_threshold\"               \n[11] \"dose\"                            \"infectious_t\"                   \n[13] \"growth_rate_nasal\"               \"growth_rate_serum\"              \n[15] \"clearance_rate\"                  \"stochastic_noise\"               \n[17] \"exponential_factor\"              \"inflection_point_nasal\"         \n[19] \"inflection_point_serum\"          \"inflection_point_absolute_nasal\"\n[21] \"inflection_point_absolute_serum\" \"growth_cease\"                   \n[23] \"nasal_ccap\"                      \"serum_ccap\"                     \n[25] \"infection_time\"                  \"score\"                          \n[27] \"recovery_time\"                   \"has_recovered\"                  \n[29] \"infector_id\"                     \"preclin_onset\"                  \n[31] \"preclin_dur\"                     \"clinical_dur\"                   \n[33] \"transmitter_state\"               \"time_since_infection\"           \n[35] \"state\""
  },
  {
    "objectID": "network.html#extract-stats",
    "href": "network.html#extract-stats",
    "title": "Between-Farm Transmission",
    "section": "Extract Stats",
    "text": "Extract Stats\nPulling a few statistics from the simulation using extract_net_simulation_summary(). Note that functions such as calculate_R0_from_network() are available to calculate stats from a series of literately run models.\nBasic stats:\n- R_farm: Farm-level reproduction estimated by outgoing node edges in network.\n- outbreak_farms: Total number of farms with outbreaks in this demo simulation.\n- first_infection_time: Time when first infection was detected.\n- total_infected_at_first: Total animals infected at time first animal was detected (i.e., some undetected).\n- total_infected_animals: Total infected animals over course of outbreak.\n\n\nHide code\nextract_net_simulation_summary(model_result)\n\n\n\n\n\n\n\n\n\n\n\n\n\nR_farm\noutbreak_farms\nfirst_infection_time\ntotal_infected_at_first\ntotal_infected_animals\n\n\n\n\n3.285714\n14\n14\n2\n7775"
  },
  {
    "objectID": "network.html#animation",
    "href": "network.html#animation",
    "title": "Between-Farm Transmission",
    "section": "Animation",
    "text": "Animation\nViewing between farm disease spread.\n\n\nHide code\nanimate_spread(net=net,\n               farm_states = model_result$farm_status$herd_states, \n               move_df = dplyr::bind_rows(model_result$movement_log),\n               output_file = here(\"images/spread.gif\")\n               )\n\n\n\n\nHide code\nknitr::include_graphics(here(\"images/spread.gif\"))"
  },
  {
    "objectID": "incubation.html",
    "href": "incubation.html",
    "title": "Phase Duration",
    "section": "",
    "text": "The script demonstrates use of time-to-event models for estimating FMD phase durations."
  },
  {
    "objectID": "incubation.html#preclinical",
    "href": "incubation.html#preclinical",
    "title": "Phase Duration",
    "section": "Preclinical",
    "text": "Preclinical\nComparing incubation and latent phase outcomes.\n\n\n\n\n\nHide code\nmedian_preclinical <- Map(function(x, y) x - y, median_incubation, median_latent)\n\nmedians_df <- as.data.frame(\n  rbind(\n    Incubation = as.data.frame(median_incubation),\n    Preclinical = as.data.frame(median_preclinical),\n    Latent = as.data.frame(median_latent)\n  )\n)\n\nmedians_df$Name <- rownames(medians_df)\nmedians_df$Name <- ordered(factor(medians_df$Name), c(\"Latent\", \"Preclinical\", \"Incubation\"))\n\n\n\n\n\nPlot study-wide median phases\n\n\nHide code\nplot_median_phases(medians_df)\n\n\n\n\n\nPlot Preclinical curve based on study-wide rates.\n\n\nHide code\nplot_compare_marginals(incubation_samples, latent_samples)"
  },
  {
    "objectID": "index.html#external-resources",
    "href": "index.html#external-resources",
    "title": "FMDV Preclinical",
    "section": "External Resources",
    "text": "External Resources\nArchives of versioned data and code are available on the Open Science Framework (OSF):\nFMDV Preclinical Transmission (DOI 10.17605/OSF.IO/P6XKE)\nThe manuscript describes simulations conducted with the challengeABM R-package\nOverview, Design concepts, Details for the simulation code."
  },
  {
    "objectID": "index.html#site-contents",
    "href": "index.html#site-contents",
    "title": "FMDV Preclinical",
    "section": "Site Contents",
    "text": "Site Contents\nUse the below links or tabs above to navigate to different sections of the analysis.\n- Data Preprocessing: Preparing data collected during animal experiment.\n- Durations: Estimating phase durations.\n- Room-to-Room: ABM Simulation of FMDV transmission through room-to-room contacts as performed during the animal experiment.\n- Within-Herd: ABM Simulation of FMDV transmission within a cattle herd assuming homogeneous mixing.\n- Between-Farm: ABM Simulation of FMDV transmission between farms related by a network. Farms are subject to quarantine and cattle movements."
  },
  {
    "objectID": "index.html#shiny",
    "href": "index.html#shiny",
    "title": "FMDV Preclinical",
    "section": "Shiny",
    "text": "Shiny\nA simple ShinyApp demonstrating Room-to-Room simulation. Click Run Experiment to run the simulation. The simulation will take approximately 10-15 to run and then produce plots showing results. Each click of the button will run the simulation using a different seed value."
  }
]