[
  {
    "objectID": "incubation.html#clinical-onset",
    "href": "incubation.html#clinical-onset",
    "title": "Incubation Phase",
    "section": "Clinical Onset",
    "text": "Clinical Onset\nThe find_clinical_onset() function identifies first occurrence of score > 0 then creates new “Event” column with 1 at this date, 0’s before this date, and a value 3 after that date.\n\n\nHide code\nclin_start_df <- as.data.frame(\n  find_clinical_onset(antem_df)\n)"
  },
  {
    "objectID": "incubation.html#remove-group-1",
    "href": "incubation.html#remove-group-1",
    "title": "Incubation Phase",
    "section": "Remove Group 1",
    "text": "Remove Group 1\nGroup 1 was not infected and has no expectation of developing disease. Animals that were infected, verified by nasal, serum, or fever but never developed lesions are censored.\n\n\nHide code\nclin_start_df <- clin_start_df %>%\n filter(group != \"Group 1\",\n         Event == 1 | censor_status == 0 & censor_k == 1)\n\n\ncheck data\n\n\nHide code\nclin_start_df %>%\n  filter(Event == 1) %>%\n  summarise(mean_dpe = mean(dpe),\n            median_dpe = median(dpe))\n\n\n\n\n\n\nmean_dpe\nmedian_dpe\n\n\n\n\n3.076923\n3"
  },
  {
    "objectID": "incubation.html#scale-time",
    "href": "incubation.html#scale-time",
    "title": "Incubation Phase",
    "section": "Scale Time",
    "text": "Scale Time\nAdd an arbitrarily small value to eliminate zeros. Really not need with his specific data set, by an important step.\n\n\nHide code\nclin_start_df$scaled_duration <- clin_start_df$dpe + 0.0001"
  },
  {
    "objectID": "incubation.html#weighted-contacts",
    "href": "incubation.html#weighted-contacts",
    "title": "Incubation Phase",
    "section": "Weighted Contacts",
    "text": "Weighted Contacts\nContact with groups by donors was sequential at 24hr intervals, shedding rates (nasal swabs) varied over this period.\n\n\nHide code\nshed_rates <- antem_df %>%\n  filter(group == \"donor\") %>%\n  group_by(dpi) %>%\n  summarise(tot_shed = sum(ifelse(nasal == 45, 0, nasal), na.rm=T)) %>%\n  mutate(group = paste(\"Group\", dpi, sep=\" \"))\n\n# match cumulative shed from donors based on time of contact\nclin_start_df$donor_shed <- with(shed_rates,\n                                 tot_shed[match(\n                                   clin_start_df$group,\n                                                 group)])\n\n# an integer index is needed for modeling purposes, group contacts are 1:1 correlated with time\nclin_start_df$shed_time <- as.integer(as.factor(clin_start_df$group))"
  },
  {
    "objectID": "incubation.html#response-variable",
    "href": "incubation.html#response-variable",
    "title": "Incubation Phase",
    "section": "Response Variable",
    "text": "Response Variable\nCreating a survival object to ensure time and censored animals are correctly indicated.\n\n\nHide code\nsurv_obj <- inla.surv(clin_start_df$scaled_duration, clin_start_df$Event)\n\n\n\nParametric SuvivalAccelerated Failure Time (AFT)\n\n\nParametric model for study-wide average duration.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(0.5, 0.001)))\n\nincubation_dur <- inla(surv_obj ~ 1 + \n                         f(shed_time, donor_shed,\n                           model = \"rw1\",\n                           constr=TRUE,\n                           scale.model = TRUE,\n                           hyper=pc_prec_iid),\n                        data = clin_start_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"exponential.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\n\n\nTreatment is specific to group therefore using group below to identify important differences.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(0.5, 0.001)))\n\nincubation_aft <- inla(surv_obj ~ 1 +\n                       f(group,\n                           model = \"iid\",\n                           constr=FALSE,\n                           hyper=pc_prec_iid),\n                        data = clin_start_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"lognormal.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\nWarning in sqrt(ee): NaNs produced"
  },
  {
    "objectID": "incubation.html#survival-model",
    "href": "incubation.html#survival-model",
    "title": "Incubation Phase",
    "section": "Survival Model",
    "text": "Survival Model\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(0.5, 0.001)))\n\nincubation_dur <- inla(surv_obj ~ 1 +\n                         f(shed_time, donor_shed,\n                           model = \"rw1\",\n                           constr=TRUE,\n                           hyper=pc_prec_iid),\n                        data = clin_start_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"exponential.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))"
  },
  {
    "objectID": "incubation.html#sample-marginals",
    "href": "incubation.html#sample-marginals",
    "title": "Incubation Phase",
    "section": "Sample Marginals",
    "text": "Sample Marginals\nPerforming sampling on the parametric model results\n\n\nHide code\nincubation_samples <- compute_survival_marginals(incubation_dur, 14)\n\n\nCheck estimates at the 0.5 probability (median)\n\n\nHide code\nmedian_incubation <- find_closest_quant(incubation_samples, 0.5)\nmedian_incubation\n\n\n$quant0.025\n[1] 1.501\n\n$quant0.25\n[1] 2.301\n\n$quant0.5\n[1] 2.901\n\n$quant0.75\n[1] 3.701\n\n$quant0.975\n[1] 6.101"
  },
  {
    "objectID": "incubation.html#survival-curve",
    "href": "incubation.html#survival-curve",
    "title": "Incubation Phase",
    "section": "Survival Curve",
    "text": "Survival Curve\nExceedance survival curve fro parametric model.\n\n\nHide code\nplot_survival_marginals(incubation_samples, x_max = 14, xlabel = \"Incubation Phase Duration\")"
  },
  {
    "objectID": "latent.html#shedding-threshold",
    "href": "latent.html#shedding-threshold",
    "title": "Latent Phase",
    "section": "Shedding Threshold",
    "text": "Shedding Threshold\nPublished FMDV shedding estimate is around 3.92\n\n\nHide code\ndonor_thresh <- antem_df %>%\n  filter(group == \"donor\" & dpi == 2) # day of contact with Group 2\n\ndonor_thresh$nasal\n\n\n[1] 3.706999 6.411625\n\n\nHide code\nmean(donor_thresh$nasal)\n\n\n[1] 5.059312\n\n\nDesignate end of latent based on shed rate.\n\n\nHide code\nlatent_end_df <- antem_df %>%\n  filter(nasal >= 3.92 & nasal != 45) %>%\n  group_by(animal) %>%\n  filter(date == min(date)) %>%\n  mutate(latent_end = 1) %>%\n  ungroup()\n\n\nQuick stats to check data\n\n\nHide code\nlatent_end_df %>%\n  summarise(mean_dpe = mean(dpe),\n            median_dpe = median(dpe),\n            min_range = min(dpe),\n            max_range = max(dpe))\n\n\n\n\n\n\nmean_dpe\nmedian_dpe\nmin_range\nmax_range\n\n\n\n\n1.428571\n1\n1\n4"
  },
  {
    "objectID": "latent.html#scale-time",
    "href": "latent.html#scale-time",
    "title": "Latent Phase",
    "section": "Scale Time",
    "text": "Scale Time\nAdd an arbitrarily small value to eliminate zeros. Really not need with his specific data set, by an important step.\n\n\nHide code\nlatent_end_df$scaled_duration <- latent_end_df$dpe + 0.0001"
  },
  {
    "objectID": "latent.html#scale-serum",
    "href": "latent.html#scale-serum",
    "title": "Latent Phase",
    "section": "Scale Serum",
    "text": "Scale Serum\nScaling serum as potential covariate.\n\n\nHide code\nlatent_end_df$serum_0 <- latent_end_df$serum\nlatent_end_df$serum_0[latent_end_df$serum_0 == 45] = 0\nlatent_end_df$serum_0 <- as.numeric(scale(latent_end_df$serum_0, scale = T, center = F))"
  },
  {
    "objectID": "latent.html#response-variable",
    "href": "latent.html#response-variable",
    "title": "Latent Phase",
    "section": "Response Variable",
    "text": "Response Variable\nCreating a survival object to ensure time and censored animals are correctly indicated.\n\n\nHide code\nsurv_obj <- inla.surv(latent_end_df$scaled_duration, latent_end_df$latent_end)"
  },
  {
    "objectID": "latent.html#survival-model",
    "href": "latent.html#survival-model",
    "title": "Latent Phase",
    "section": "Survival Model",
    "text": "Survival Model\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\nlatent_end_mod <- inla(surv_obj ~ 1 + serum_0,\n                        data = latent_end_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"exponential.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))"
  },
  {
    "objectID": "latent.html#sample-marginals",
    "href": "latent.html#sample-marginals",
    "title": "Latent Phase",
    "section": "Sample Marginals",
    "text": "Sample Marginals\nPerforming sampling on the model results\n\n\nHide code\nlatent_samples <- compute_survival_marginals(latent_end_mod, 5)\n\n\nCheck estimates at the 0.5 probability (median)\n\n\nHide code\nmedian_latent <- find_closest_quant(latent_samples, 0.5)\nmedian_latent\n\n\n$quant0.025\n[1] 0.501\n\n$quant0.25\n[1] 0.901\n\n$quant0.5\n[1] 1.201\n\n$quant0.75\n[1] 1.501\n\n$quant0.975\n[1] 2.501"
  },
  {
    "objectID": "latent.html#survival-curve",
    "href": "latent.html#survival-curve",
    "title": "Latent Phase",
    "section": "Survival Curve",
    "text": "Survival Curve\n\n\nHide code\nplot_survival_marginals(latent_samples, x_max = 5, xlabel = \"Latent Phase Duration\")"
  },
  {
    "objectID": "latent.html#calculate-subclinical",
    "href": "latent.html#calculate-subclinical",
    "title": "Latent Phase",
    "section": "Calculate Subclinical",
    "text": "Calculate Subclinical\n\n\nHide code\n# from other analysis\nincubation_samples <- readRDS(here(\"assets/incubation_samples.rds\"))\nmedian_incubation <- readRDS(here(\"assets/incubation_median.rds\"))\n \nmedian_subclinical <- Map(function(x, y) x - y, median_incubation, median_latent)\n\nmedians_df <- as.data.frame(\n  rbind(\n    Incubation = as.data.frame(median_incubation),\n    Subclinical = as.data.frame(median_subclinical),\n    Latent = as.data.frame(median_latent)\n  )\n)\n\nmedians_df\n\n\n\n\n\n\n\nquant0.025\nquant0.25\nquant0.5\nquant0.75\nquant0.975\n\n\n\n\nIncubation\n1.501\n2.301\n2.901\n3.601\n5.901\n\n\nSubclinical\n1.000\n1.400\n1.700\n2.100\n3.400\n\n\nLatent\n0.501\n0.901\n1.201\n1.501\n2.501\n\n\n\n\n\n\nHide code\nmedians_df$Name <- rownames(medians_df)\nmedians_df$Name <- ordered(factor(medians_df$Name), c(\"Latent\", \"Subclinical\", \"Incubation\"))\n\n\nPlot median phases\n\n\nHide code\nplot_median_phases(medians_df)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nPlot subclinical curve.\n\n\nHide code\nplot_compare_marginals(incubation_samples, latent_samples)"
  },
  {
    "objectID": "preprocess.html",
    "href": "preprocess.html",
    "title": "Preprocessing",
    "section": "",
    "text": "Hide code\nlibrary(tidyverse)\nlibrary(INLA)\nlibrary(here)\nlibrary(pals)"
  },
  {
    "objectID": "preprocess.html#custom-functions",
    "href": "preprocess.html#custom-functions",
    "title": "Preprocessing",
    "section": "Custom Functions",
    "text": "Custom Functions\n\n\nHide code\nsource(here(\"R/utilities.R\"))\nsource_dir(here(\"R\"))"
  },
  {
    "objectID": "preprocess.html#read-data",
    "href": "preprocess.html#read-data",
    "title": "Preprocessing",
    "section": "Read Data",
    "text": "Read Data\n\n\nHide code\nantem_df <- read_csv(here(\"local/bov_antemortem_2024.csv\"))\n\n# minimum date\nmin_date <- min(antem_df$date)\nmin_date # date of donor inoculation\n\n\n[1] \"2023-06-26\"\n\n\nHide code\n# add variables \nantem_df <- antem_df %>%\n  mutate(hpdi = as.numeric(difftime(date, min_date, units = \"hours\")), # hours post donor inoculation \n         hpe = dpe*24, # convert dpe to hpe\n         exp_type = if_else(group == \"donor\", \"inoc\", \"cont\"), # exposed by inoculation or direct contact\n         fever = if_else(temp >= 104, \"fever\", \"no_fever\"), # temp >= 104 constitutes fever\n         censor_status = if_else(group == \"Group 1\" | animal == \"BR23-24\", 0, 1), # No obs symptoms (0) in these \n  )\n\ndim(antem_df)\n\n\n[1] 168  14"
  },
  {
    "objectID": "preprocess.html#plots-to-check-data",
    "href": "preprocess.html#plots-to-check-data",
    "title": "Preprocessing",
    "section": "Plots to Check Data",
    "text": "Plots to Check Data\n\nDonors\n\n\nHide code\nplot_donors(antem_df)\n\n\n\n\n\n\n\nContact Groups\n\n\nHide code\nplot_contact_groups(antem_df)"
  },
  {
    "objectID": "longitudinal.html#organize-data",
    "href": "longitudinal.html#organize-data",
    "title": "Longitudinal Analysis",
    "section": "Organize Data",
    "text": "Organize Data\n\n\nHide code\nlongitud_df <- antem_df %>% \n  filter(group != \"Group 1\") %>%\n  mutate(y_shed = if_else(nasal == 0, NA, nasal),\n         y_shed = if_else(nasal == 45, 0, y_shed),\n         y_serum = if_else(serum == 0, NA, serum),\n         y_serum = if_else(serum == 45, 0, y_serum),\n         temp_sc = as.numeric(scale(temp, scale = TRUE, center = TRUE)),\n         time_step = dpe + 1)\n\n#plot(density(longitud_df$y_serum, na.rm=T)) # ~normal"
  },
  {
    "objectID": "longitudinal.html#shedding-rates",
    "href": "longitudinal.html#shedding-rates",
    "title": "Longitudinal Analysis",
    "section": "Shedding Rates",
    "text": "Shedding Rates\nRun model for shedding (nasal swabs)\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_rw <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(1, 0.001)))\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(3, 0.001)))\n\nshed_form <- y_shed ~ 1 + f(time_step,\n                             model = \"rw1\",\n                             constr = TRUE,\n                             scale.model = TRUE,\n                             hyper=pc_prec_rw) +\n                           f(animal,\n                             model = \"iid\",\n                             constr=TRUE,\n                             hyper=pc_prec_iid) + \n                           f(exp_type, \n                             model = \"iid\",\n                             constr=TRUE,\n                             hyper=pc_prec_iid) +\n                             temp \n\nshed_model <- inla(shed_form, \n                   data = longitud_df, \n                   family = \"gaussian\",\n                   quantiles = return_quants,\n                   verbose=FALSE,\n                   control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n# summary(shed_model)\n\n\nPlot Time Effect\n\n\nHide code\ntime_df <- shed_model$summary.random$time_step[, c(1, 4:10)]\nnames(time_df) <- c(\"DPE\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\ntime_df$DPE <- time_df$DPE - 1\n\nplot_time_rw(time_df)\n\n\n\n\n\nPlot animals\n\n\nHide code\nanimal_df <- shed_model$summary.random$animal[, c(1, 4:10)]\nnames(animal_df) <- c(\"Animal\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\nplot_animals_linerange(animal_df)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nPlot exposure type\n\n\nHide code\nexptype_df <- shed_model$summary.random$exp_type[, c(1, 4:10)]\nnames(exptype_df) <- c(\"type\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\") \nexptype_df$type <- as.factor(exptype_df$type)\n\nlevels(exptype_df$type) <- c(\"Contact\", \"Inoculation\")\n\nplot_exposure_linerange(exptype_df)\n\n\n\n\n\nFixed effects coefficients\n\n\nHide code\ntemp_post <- shed_model$marginals.fixed \n\nnames(temp_post)\n\n\n[1] \"(Intercept)\" \"temp\"       \n\n\nTemperature\n\n\nHide code\nplot_fixed_posterior(temp_post, model = shed_model, xlabel = \"Temperature\", fixed_eff = \"temp\")\n\n\n\n\n\nIntercept\n\n\nHide code\nplot_fixed_posterior(temp_post, model = shed_model, xlabel = \"Intercept\", fixed_eff = \"(Intercept)\")"
  },
  {
    "objectID": "longitudinal.html#serum",
    "href": "longitudinal.html#serum",
    "title": "Longitudinal Analysis",
    "section": "Serum",
    "text": "Serum\nRun model for serum\n\n\nHide code\npc_prec_rw <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(1, 0.001)))\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(3, 0.001)))\n\nserum_form <- y_serum ~ 1 + f(time_step,\n                               model = \"rw1\",\n                               constr = TRUE,\n                               scale.model = TRUE,\n                               hyper=pc_prec_rw) +\n                             f(animal,\n                               model = \"iid\",\n                               constr=TRUE,\n                               hyper=pc_prec_iid) + \n                             f(exp_type, \n                               model = \"iid\",\n                               constr=TRUE,\n                               hyper=pc_prec_iid) +\n                               temp_sc \n\nserum_model <- inla(serum_form, \n                   data = longitud_df, \n                   family = \"gaussian\",\n                   quantiles = return_quants,\n                   verbose=FALSE,\n                   control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n# summary(serum_model)\n\n\nPlot Time Effect\n\n\nHide code\ntime_df <- serum_model$summary.random$time_step[, c(1, 4:10)]\nnames(time_df) <- c(\"DPE\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\ntime_df$DPE <- time_df$DPE - 1\n\nplot_time_rw(time_df)\n\n\n\n\n\nPlot animals\n\n\nHide code\nanimal_df <- serum_model$summary.random$animal[, c(1, 4:10)]\nnames(animal_df) <- c(\"Animal\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\nplot_animals_linerange(animal_df)\n\n\n\n\n\nPlot exposure type\n\n\nHide code\nexptype_df <- serum_model$summary.random$exp_type[, c(1, 4:10)]\nnames(exptype_df) <- c(\"type\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\") \nexptype_df$type <- as.factor(exptype_df$type)\n\nlevels(exptype_df$type) <- c(\"Contact\", \"Inoculation\")\n\nplot_exposure_linerange(exptype_df)\n\n\n\n\n\nFixed effects coefficients\n\n\nHide code\ntemp_post <- serum_model$marginals.fixed \n\nnames(temp_post)\n\n\n[1] \"(Intercept)\" \"temp_sc\"    \n\n\nTemperature\n\n\nHide code\nplot_fixed_posterior(temp_post, model = serum_model, xlabel = \"Temperature\", fixed_eff = \"temp_sc\")\n\n\n\n\n\nIntercept\n\n\nHide code\nplot_fixed_posterior(temp_post, model = serum_model, xlabel = \"Intercept\", fixed_eff = \"(Intercept)\")"
  },
  {
    "objectID": "longitudinal.html#lesion-score",
    "href": "longitudinal.html#lesion-score",
    "title": "Longitudinal Analysis",
    "section": "Lesion Score",
    "text": "Lesion Score\nRun model for lesion score\n\n\nHide code\npc_prec_rw <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(1, 0.001)))\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(3, 0.001)))\n\nscore_form <- score ~ 1 + f(time_step,\n                               model = \"rw1\",\n                               constr = TRUE,\n                               scale.model = TRUE,\n                               hyper=pc_prec_rw) +\n                             f(animal,\n                               model = \"iid\",\n                               constr=TRUE,\n                               hyper=pc_prec_iid) + \n                             f(exp_type, \n                               model = \"iid\",\n                               constr=TRUE,\n                               hyper=pc_prec_iid) +\n                               temp \n\nscore_model <- inla(score_form, \n                   data = longitud_df, \n                   family = \"gaussian\",\n                   quantiles = return_quants,\n                   verbose=FALSE,\n                   control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n# summary(score_model)\n\n\nPlot Time Effect\n\n\nHide code\ntime_df <- score_model$summary.random$time_step[, c(1, 4:10)]\nnames(time_df) <- c(\"DPE\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\ntime_df$DPE <- time_df$DPE - 1\n\nplot_time_rw(time_df)\n\n\n\n\n\nPlot animals\n\n\nHide code\nanimal_df <- score_model$summary.random$animal[, c(1, 4:10)]\nnames(animal_df) <- c(\"Animal\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\nplot_animals_linerange(animal_df)\n\n\n\n\n\nPlot exposure type\n\n\nHide code\nexptype_df <- score_model$summary.random$exp_type[, c(1, 4:10)]\nnames(exptype_df) <- c(\"type\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\") \nexptype_df$type <- as.factor(exptype_df$type)\n\nlevels(exptype_df$type) <- c(\"Contact\", \"Inoculation\")\n\nplot_exposure_linerange(exptype_df)\n\n\n\n\n\nFixed effects coefficients\n\n\nHide code\ntemp_post <- score_model$marginals.fixed \n\nnames(temp_post)\n\n\n[1] \"(Intercept)\" \"temp\"       \n\n\nTemperature\n\n\nHide code\nplot_fixed_posterior(temp_post, model = score_model, xlabel = \"Temperature\", fixed_eff = \"temp\")\n\n\n\n\n\nIntercept\n\n\nHide code\nplot_fixed_posterior(temp_post, model = score_model, xlabel = \"Intercept\", fixed_eff = \"(Intercept)\")"
  },
  {
    "objectID": "longitudinal.html#temperature",
    "href": "longitudinal.html#temperature",
    "title": "Longitudinal Analysis",
    "section": "Temperature",
    "text": "Temperature\nRun model for body temperature\n\n\nHide code\nlongitud_df$y_temper <- as.numeric(scale(longitud_df$temp, scale=TRUE, center=TRUE))\n\npc_prec_rw <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(1, 0.001)))\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(3, 0.001)))\n\ntemper_form <- y_temper ~ -1 + f(time_step,\n                                 model = \"rw1\",\n                                 constr = TRUE,\n                                 scale.model = TRUE,\n                                 hyper=pc_prec_rw) +\n                                f(animal,\n                                 model = \"iid\",\n                                 constr=TRUE,\n                                 hyper=pc_prec_iid) + \n                                f(exp_type, \n                                 model = \"iid\",\n                                 constr=TRUE,\n                                 hyper=pc_prec_iid) +\n                              score\n\ntemper_model <- inla(temper_form, \n                   data = longitud_df, \n                   family = \"gaussian\",\n                   quantiles = return_quants,\n                   verbose=FALSE,\n                   control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n# summary(temper_model)\n\n\nPlot Time Effect\n\n\nHide code\ntime_df <- temper_model$summary.random$time_step[, c(1, 4:10)]\nnames(time_df) <- c(\"DPE\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\ntime_df$DPE <- time_df$DPE - 1\n\nplot_time_rw(time_df)\n\n\n\n\n\nPlot animals\n\n\nHide code\nanimal_df <- temper_model$summary.random$animal[, c(1, 4:10)]\nnames(animal_df) <- c(\"Animal\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\")\n\nplot_animals_linerange(animal_df)\n\n\n\n\n\nPlot exposure type\n\n\nHide code\nexptype_df <- temper_model$summary.random$exp_type[, c(1, 4:10)]\nnames(exptype_df) <- c(\"type\", \"Q_0.025\", \"Q_0.05\", \"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.95\", \"Q_0.975\") \nexptype_df$type <- as.factor(exptype_df$type)\n\nlevels(exptype_df$type) <- c(\"Contact\", \"Inoculation\")\n\nplot_exposure_linerange(exptype_df)\n\n\n\n\n\nFixed effects coefficients\n\n\nHide code\ntemp_post <- temper_model$marginals.fixed \n\nnames(temp_post)\n\n\n[1] \"score\"\n\n\nScore\n\n\nHide code\nplot_fixed_posterior(temp_post, model = temper_model, xlabel = \"Score\", fixed_eff = \"score\")"
  },
  {
    "objectID": "subclinical.html#calculate-subclinical",
    "href": "subclinical.html#calculate-subclinical",
    "title": "Subclinical Phase",
    "section": "Calculate Subclinical",
    "text": "Calculate Subclinical\nStudy-wide rates.\n\n\nHide code\n# from other analysis\nincubation_samples <- readRDS(here(\"assets/incubation_samples.rds\"))\nlatent_samples <- readRDS(here(\"assets/latent_samples.rds\"))\nmedian_incubation <- readRDS(here(\"assets/incubation_median.rds\"))\nmedian_latent <- readRDS(here(\"assets/latent_median.rds\")) \n \nmedian_subclinical <- Map(function(x, y) x - y, median_incubation, median_latent)\n\nmedians_df <- as.data.frame(\n  rbind(\n    Incubation = as.data.frame(median_incubation),\n    Subclinical = as.data.frame(median_subclinical),\n    Latent = as.data.frame(median_latent)\n  )\n)\n\nmedians_df\n\n\n\n\n\n\n\nquant0.025\nquant0.25\nquant0.5\nquant0.75\nquant0.975\n\n\n\n\nIncubation\n1.501\n2.301\n2.901\n3.601\n5.901\n\n\nSubclinical\n1.000\n1.400\n1.700\n2.100\n3.400\n\n\nLatent\n0.501\n0.901\n1.201\n1.501\n2.501\n\n\n\n\n\n\nHide code\nmedians_df$Name <- rownames(medians_df)\nmedians_df$Name <- ordered(factor(medians_df$Name), c(\"Latent\", \"Subclinical\", \"Incubation\"))\n\n\nSubclinical by group\n\n\nHide code\nincubation_aft <- readRDS(here(\"assets/incubation_aft_median.rds\"))\nlatent_aft <- readRDS(here(\"assets/latent_aft_median.rds\"))  \n\nincu_grps <- incubation_aft \nlatent_grps <- latent_aft[,3:8]\n\nsubclin_grps <- incu_grps %>%\n  inner_join(latent_grps, by = \"Group\", suffix = c(\"_incu\", \"_latent\")) %>%\n  mutate(\n    Q_0.025 = Q_0.025_incu - Q_0.025_latent,\n    Q_0.25  = Q_0.25_incu - Q_0.25_latent,\n    Q_0.5   = Q_0.5_incu - Q_0.5_latent,\n    Q_0.75  = Q_0.75_incu - Q_0.75_latent,\n    Q_0.975 = Q_0.975_incu - Q_0.975_latent,\n    Phase = \"Subclinical\"\n  ) %>%\n  select(Phase, Group, Q_0.025, Q_0.25, Q_0.5, Q_0.75, Q_0.975)\n\nsubclin_grps\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPhase\nGroup\nQ_0.025\nQ_0.25\nQ_0.5\nQ_0.75\nQ_0.975\n\n\n\n\nSubclinical\nstudy\n1.3635400\n1.7093057\n1.9020377\n2.116677\n2.648249\n\n\nSubclinical\ndonor\n1.6419888\n2.1329785\n2.4793733\n2.785928\n3.459646\n\n\nSubclinical\nGroup 2\n2.4473436\n3.1525713\n3.5842509\n4.013332\n5.051369\n\n\nSubclinical\nGroup 3\n0.6910402\n0.8361282\n0.9309622\n1.098180\n1.452167\n\n\nSubclinical\nGroup 4\n0.9921016\n1.2109766\n1.3450047\n1.553879\n2.018282\n\n\n\n\n\n\nHide code\nincu_grps$Phase <- \"Incubation\" \nlatent_grps$Phase <- \"Latent\"\n  \nall_grps_w <- rbind(latent_grps, incu_grps, subclin_grps)\n\n\nPlot study-wide median phases\n\n\nHide code\nplot_median_phases(medians_df)\n\n\n\n\n\nPlot subclinical curve based on study-wide rates.\n\n\nHide code\nplot_compare_marginals(incubation_samples, latent_samples)\n\n\n\n\n\nPlot treatment-specific subclinical estimates from AFT models.\n\n\nHide code\nplot_group_phases(all_grps_w)"
  },
  {
    "objectID": "serial_interval.html#clinical-onset",
    "href": "serial_interval.html#clinical-onset",
    "title": "Fractional Subclinical Transmsisson",
    "section": "Clinical Onset",
    "text": "Clinical Onset\nThe find_clinical_onset() function identifies first occurrence of score > 0 then creates new “Event” column with 1 at this date, 0’s before this date, and a value 3 after that date.\n\n\nHide code\nclin_start_df <- as.data.frame(\n  find_clinical_onset(antem_df)\n)\n\nonsets_df <- clin_start_df %>% \n  filter(Event == 1)"
  },
  {
    "objectID": "serial_interval.html#descriptive",
    "href": "serial_interval.html#descriptive",
    "title": "Serial Interval",
    "section": "Descriptive",
    "text": "Descriptive\n\n\nHide code\nemp_incub_periods_df <- clin_start_df %>%\n  group_by(animal, group) %>%\n  summarise(\n    incubation_period = if (nrow(filter(cur_data(), Event == 1)) == 0) {\n      NA\n    } else {\n      as.numeric(\n        filter(cur_data(), Event == 1)$date - filter(cur_data(), dpe == 0)$date\n      )\n    }\n  ) %>%\n  ungroup()\n\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `incubation_period = if (...) NULL`.\nℹ In group 1: `animal = \"BR23-17\"` and `group = \"donor\"`.\nCaused by warning:\n! `cur_data()` was deprecated in dplyr 1.1.0.\nℹ Please use `pick()` instead."
  },
  {
    "objectID": "serial_interval.html#empiracal-si",
    "href": "serial_interval.html#empiracal-si",
    "title": "Serial Interval",
    "section": "Empiracal SI",
    "text": "Empiracal SI\n\n\nHide code\ndonors <- onsets_df[onsets_df$group == \"donor\", ]\nsecondary <- onsets_df[onsets_df$group != \"donor\", ]\n\nserial_intervals <- list()\n\n# Loop over each donor\nfor (i in 1:nrow(donors)) {\n  donor_date <- donors$date[i]\n  donor_animal <- donors$animal[i]\n  \n  # Calculate the serial intervals for each secondary case\n  intervals <- secondary$date - donor_date\n  \n  # Store the results in the list, including the \"group\" column\n  serial_intervals[[donor_animal]] <- data.frame(\n    donor = donor_animal,\n    secondary_animal = secondary$animal,\n    group = secondary$group,\n    serial_interval = as.numeric(intervals)\n  )\n}\n\n# Combine the results into a single dataframe\nserial_intervals_df <- do.call(rbind, serial_intervals)\n\n\nrange(serial_intervals_df$serial_interval)\n\n\n[1] 1 3\n\n\nHide code\nserial_intervals_df %>%\n  group_by(group) %>%\n  summarize(group_mean = mean(serial_interval))\n\n\n\n\n\n\ngroup\ngroup_mean\n\n\n\n\nGroup 2\n2.666667\n\n\nGroup 3\n1.000000\n\n\nGroup 4\n2.500000\n\n\n\n\n\n\nHide code\nserial_intervals_df %>%\n  group_by(donor) %>%\n  summarize(donor_mean = mean(serial_interval))\n\n\n\n\n\n\ndonor\ndonor_mean\n\n\n\n\nBR23-17\n2\n\n\nBR23-18\n2\n\n\n\n\n\n\n\n\nHide code\nlibrary(fitdistrplus)\n\n\nLoading required package: MASS\n\n\n\nAttaching package: 'MASS'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\nLoading required package: survival\n\n\nHide code\n# Fit a gamma distribution to the serial interval data\nfit <- fitdist(serial_intervals_df$serial_interval, \"gamma\")\n\n# Display the fit summary\nsummary(fit)\n\n\nFitting of the distribution ' gamma ' by maximum likelihood \nParameters : \n      estimate Std. Error\nshape 4.939817  1.4419287\nrate  2.469819  0.7588687\nLoglikelihood:  -27.33323   AIC:  58.66645   BIC:  60.84853 \nCorrelation matrix:\n          shape      rate\nshape 1.0000000 0.9500167\nrate  0.9500167 1.0000000\n\n\nHide code\n# Plot the fit\nplot(fit)\n\n\n\n\n\n\n\nHide code\nggplot(serial_intervals_df, aes(x = serial_interval)) +\n  geom_histogram(aes(y = ..density..), binwidth = 1, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  geom_density(color = \"red\", size = 1) +\n  labs(title = \"Probability Distribution of Serial Intervals\",\n       x = \"Serial Interval (days)\",\n       y = \"Probability Density\") +\n  theme_minimal()\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: The dot-dot notation (`..density..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(density)` instead."
  },
  {
    "objectID": "serial_interval.html#empiracal-incubation-period",
    "href": "serial_interval.html#empiracal-incubation-period",
    "title": "Fractional Subclinical Transmsisson",
    "section": "Empiracal Incubation Period",
    "text": "Empiracal Incubation Period\n\n\nHide code\nempirical_incub_periods <- clin_start_df %>%\n  group_by(animal, group) %>%\n  summarise(\n    incubation_period = if (nrow(filter(pick(everything()), Event == 1)) == 0) {\n      NA\n    } else {\n      as.numeric(\n        filter(pick(everything()), Event == 1)$date - filter(pick(everything()), dpe == 0)$date\n      )\n    }\n  ) %>%\n  ungroup()\n\ngroup_incu <- as.data.frame(\n  empirical_incub_periods %>%\n  group_by(group) %>%\n  summarise(mean_incu = mean(incubation_period, na.rm=T),\n            sd_incu = sd(incubation_period, na.rm=T)) %>%\n    filter(group %in% c(\"Group 2\", \"Group 3\", \"Group 4\"))\n  ) \n\nemp_incub <- empirical_incub_periods %>%\n  filter(is.na(incubation_period) == FALSE)"
  },
  {
    "objectID": "serial_interval.html#empirical-serial-interval",
    "href": "serial_interval.html#empirical-serial-interval",
    "title": "Fractional Subclinical Transmsisson",
    "section": "Empirical Serial Interval",
    "text": "Empirical Serial Interval\n\n\nHide code\ndonors <- onsets_df[onsets_df$group == \"donor\", ]\nsecondary <- onsets_df[onsets_df$group != \"donor\", ]\n\nserial_intervals <- list()\n# loop over each donor\nfor (i in 1:nrow(donors)) {\n  donor_date <- donors$date[i]\n  donor_animal <- donors$animal[i]\n  \n  # serial intervals\n  intervals <- secondary$date - donor_date\n  \n  serial_intervals[[donor_animal]] <- data.frame(\n    donor = donor_animal,\n    secondary = secondary$animal,\n    group = secondary$group,\n    serial_interval = as.numeric(intervals)\n  )\n}\n\nserial_intervals_df <- do.call(rbind, serial_intervals)\n\nrange(serial_intervals_df$serial_interval)\n\n\n[1] 1 3\n\n\nHide code\ngroup_si <- as.data.frame(\n  serial_intervals_df %>%\n  group_by(group) %>%\n  summarize(si_mean = mean(serial_interval),\n            si_sd = sd(serial_interval)) %>%\n    filter(group %in% c(\"Group 2\", \"Group 3\", \"Group 4\"))\n)\n\ngroup_means <- left_join(group_incu, group_si, by = \"group\")"
  },
  {
    "objectID": "serial_interval.html#bootstrap-preclinical-fraction",
    "href": "serial_interval.html#bootstrap-preclinical-fraction",
    "title": "Fractional Subclinical Transmsisson",
    "section": "Bootstrap Preclinical Fraction",
    "text": "Bootstrap Preclinical Fraction\n\n\nHide code\nboot_out <- bootstrap_preclinical_frac(group_means)\n\nboot_out$plot"
  },
  {
    "objectID": "overview.html",
    "href": "overview.html",
    "title": "Overview",
    "section": "",
    "text": "Under Active Development\n\n\n\nThis site includes exploratory analyses, has not been verified, and is subject to change."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Overview",
    "section": "",
    "text": "Under Active Development\n\n\n\nThis site includes exploratory analyses, has not been verified, and is subject to change."
  },
  {
    "objectID": "preprocess.html#anova",
    "href": "preprocess.html#anova",
    "title": "Preprocessing",
    "section": "ANOVA",
    "text": "ANOVA\nTo evaluate the differences in nasal, serum, and lesion score among groups and over time, repeated measures ANOVAs were applied using the ezANOVA() function from the ez R-package. The analyses included within-subjects (days post-exposure, dpe) and between-subjects (group) factors, with nasal, serum, and lesion scores as the dependent variables. Mauchly’s test was conducted to test the assumption of sphericity. Where violations were found, Greenhouse-Geisser and Huynh-Feldt corrections were applied.\nThe repeated measures ANOVA results for nasal, serum, and lesion scores were significant. For nasal virus quantity, there were significant main effects of group (F(2, 9) = 9.22, p = 0.0066) and days post-exposure (dpe) (F(6, 54) = 33.99, p < 0.0001), as well as a significant interaction between group and dpe (F(12, 54) = 5.53, p < 0.0001), suggesting that nasal virus quantity varied significantly across groups and time, with different temporal patterns among groups. For serum virus quantity, no significant main effect of group was found (F(2, 9) = 2.79, p = 0.114), but there were significant effects of dpe (F(6, 54) = 25.18, p < 0.0001) and the group by dpe interaction (F(12, 54) = 7.95, p < 0.0001), indicating significant changes over time and different temporal patterns among groups. Lesion scores showed significant main effects of group (F(2, 9) = 5.86, p = 0.023) and dpe (F(6, 54) = 45.87, p < 0.0001), and a significant interaction between group and dpe (F(12, 54) = 3.04, p = 0.0025), indicating significant differences in lesion severity across groups and over time, with varying temporal patterns among the groups.\nPrepare Data\n\n\nHide code\ncontact_groups <- antem_df %>%\n  filter(group %in% c(\"Group 2\", \"Group 3\", \"Group 4\")) %>%\n  select(animal, group, nasal, serum, dpe, score) %>%\n  mutate(\n    score = replace_na(score, 0)) %>%\n  drop_na() %>%\n  mutate(\n    score = replace_na(score, 0),          \n    nasal = replace(nasal, nasal == 45, 0), \n    serum = replace(serum, serum == 45, 0),\n    dpe = as.factor(dpe),                   \n    animal = as.factor(animal),            \n    group = as.factor(group)                \n  ) %>%\n  as.data.frame()\n\n\n\nNasalSerumScore\n\n\nResults indicate that nasal virus quantity differed significantly between the groups and across the days post-exposure, with an interaction effect suggesting that the temporal pattern of virus quantity varied among the groups.\n\n\nHide code\nnasal_anova <- ez::ezANOVA(data = contact_groups, dv = .(nasal), wid = .(animal), within = .(dpe), between = .(group))\nnasal_anova\n\n\n$ANOVA\n     Effect DFn DFd         F            p p<.05       ges\n2     group   2   9  9.223642 6.619789e-03     * 0.2693092\n3       dpe   6  54 33.985994 1.195097e-16     * 0.7559307\n4 group:dpe  12  54  5.531737 4.748785e-06     * 0.5020495\n\n$`Mauchly's Test for Sphericity`\n     Effect           W           p p<.05\n3       dpe 0.002507464 0.007421478     *\n4 group:dpe 0.002507464 0.007421478     *\n\n$`Sphericity Corrections`\n     Effect       GGe        p[GG] p[GG]<.05       HFe        p[HF] p[HF]<.05\n3       dpe 0.4698995 7.240063e-09         * 0.7063488 2.378893e-12         *\n4 group:dpe 0.4698995 1.041644e-03         * 0.7063488 9.172502e-05         *\n\n\n\n\nResults suggest that while there were no significant differences between groups, there were significant changes over time, and the pattern of these changes differed significantly among the groups.\n\n\nHide code\nserum_anova <- ez::ezANOVA(data = contact_groups, dv = .(serum), wid = .(animal), within = .(dpe), between = .(group))\nserum_anova\n\n\n$ANOVA\n     Effect DFn DFd         F            p p<.05       ges\n2     group   2   9  2.789541 1.141052e-01       0.1386202\n3       dpe   6  54 25.182482 5.082150e-14     * 0.6744439\n4 group:dpe  12  54  7.951312 2.761527e-08     * 0.5667711\n\n$`Mauchly's Test for Sphericity`\n     Effect            W            p p<.05\n3       dpe 1.265279e-05 6.228482e-08     *\n4 group:dpe 1.265279e-05 6.228482e-08     *\n\n$`Sphericity Corrections`\n     Effect       GGe        p[GG] p[GG]<.05       HFe        p[HF] p[HF]<.05\n3       dpe 0.2446423 7.610504e-05         * 0.2805428 2.727829e-05         *\n4 group:dpe 0.2446423 2.894414e-03         * 0.2805428 1.633022e-03         *\n\n\n\n\nResults indicate that lesion scores differed significantly between the groups and across the days post-exposure, with an interaction effect suggesting that the temporal pattern of lesion severity varied among the groups.\n\n\nHide code\nscore_anova <- ez::ezANOVA(data = contact_groups, dv = .(score), wid = .(animal), within = .(dpe), between = .(group))\nscore_anova\n\n\n$ANOVA\n     Effect DFn DFd         F            p p<.05       ges\n2     group   2   9  5.860606 2.345433e-02     * 0.2550442\n3       dpe   6  54 45.873199 1.823174e-19     * 0.7897890\n4 group:dpe  12  54  3.038905 2.531711e-03     * 0.3323484\n\n$`Mauchly's Test for Sphericity`\n     Effect            W            p p<.05\n3       dpe 6.163627e-19 5.763765e-47     *\n4 group:dpe 6.163627e-19 5.763765e-47     *\n\n$`Sphericity Corrections`\n     Effect       GGe        p[GG] p[GG]<.05       HFe        p[HF] p[HF]<.05\n3       dpe 0.4739793 2.829807e-10         * 0.7157848 1.639730e-14         *\n4 group:dpe 0.4739793 2.364298e-02         * 0.7157848 8.310038e-03         *"
  },
  {
    "objectID": "preprocess.html#nasal",
    "href": "preprocess.html#nasal",
    "title": "Preprocessing",
    "section": "Nasal",
    "text": "Nasal\n\n\nHide code\nnasal_anova <- ez::ezANOVA(data = contact_groups, dv = .(nasal), wid = .(animal), within = .(dpe), between = .(group))\n\n\nWarning: You have removed one or more levels from variable \"dpe\". Refactoring\nfor ANOVA.\n\n\nHide code\n#| label: tbl-nasal_anova\n#| tbl-cap: Results indicate that nasal virus quantity differed significantly between the groups and across the days post-exposure, with an interaction effect suggesting that the temporal pattern of virus quantity varied among the groups. \n\napaTables::apa.ezANOVA.table(nasal_anova,\n                             table.title = \"Nasal\")\n\n\n\n\nNasal \n\n   Predictor df_num df_den Epsilon     F    p ges\n       group   2.00   9.00          9.22 .007 .27\n         dpe   2.82  25.37    0.47 33.99 .000 .76\n group x dpe   5.64  25.37    0.47  5.53 .001 .50\n\nNote. df_num indicates degrees of freedom numerator. df_den indicates degrees of freedom denominator. \nEpsilon indicates Greenhouse-Geisser multiplier for degrees of freedom, \np-values and degrees of freedom in the table incorporate this correction.\nges indicates generalized eta-squared."
  },
  {
    "objectID": "preprocess.html#serum",
    "href": "preprocess.html#serum",
    "title": "Preprocessing",
    "section": "Serum",
    "text": "Serum\n\n\nHide code\nserum_anova <- ez::ezANOVA(data = contact_groups, dv = .(serum), wid = .(animal), within = .(dpe), between = .(group))\n\n\nWarning: You have removed one or more levels from variable \"dpe\". Refactoring\nfor ANOVA.\n\n\nHide code\n#| label: tbl-serum_anova\n#| tbl-cap: Results suggest that while there were no significant differences between groups, there were significant changes over time, and the pattern of these changes differed significantly among the groups.  \n#| \napaTables::apa.ezANOVA.table(serum_anova,\n                             table.title = \"Serum\")\n\n\n\n\nSerum \n\n   Predictor df_num df_den Epsilon     F    p ges\n       group   2.00   9.00          2.79 .114 .14\n         dpe   1.47  13.21    0.24 25.18 .000 .67\n group x dpe   2.94  13.21    0.24  7.95 .003 .57\n\nNote. df_num indicates degrees of freedom numerator. df_den indicates degrees of freedom denominator. \nEpsilon indicates Greenhouse-Geisser multiplier for degrees of freedom, \np-values and degrees of freedom in the table incorporate this correction.\nges indicates generalized eta-squared."
  },
  {
    "objectID": "preprocess.html#score",
    "href": "preprocess.html#score",
    "title": "Preprocessing",
    "section": "Score",
    "text": "Score\n\n\nHide code\nscore_anova <- ez::ezANOVA(data = contact_groups, dv = .(score), wid = .(animal), within = .(dpe), between = .(group))\n\n\nWarning: You have removed one or more levels from variable \"dpe\". Refactoring\nfor ANOVA.\n\n\nHide code\n#| label: tbl-score_anova\n#| tbl-cap: Results indicate that lesion scores differed significantly between the groups and across the days post-exposure, with an interaction effect suggesting that the temporal pattern of lesion severity varied among the groups. \n#| \napaTables::apa.ezANOVA.table(score_anova,\n                             table.title = \"Score\")\n\n\n\n\nScore \n\n   Predictor df_num df_den Epsilon     F    p ges\n       group   2.00   9.00          5.86 .023 .26\n         dpe   2.84  25.59    0.47 45.87 .000 .79\n group x dpe   5.69  25.59    0.47  3.04 .024 .33\n\nNote. df_num indicates degrees of freedom numerator. df_den indicates degrees of freedom denominator. \nEpsilon indicates Greenhouse-Geisser multiplier for degrees of freedom, \np-values and degrees of freedom in the table incorporate this correction.\nges indicates generalized eta-squared."
  },
  {
    "objectID": "incubation.html#aft-treament-effects",
    "href": "incubation.html#aft-treament-effects",
    "title": "Incubation Phase",
    "section": "AFT Treament Effects",
    "text": "AFT Treament Effects\nGet treatment-level estimated duration\n\n\nHide code\naft_incubation <- incubation_aft$summary.random$group[,c(1,4,6,7,8, 10)]\nnames(aft_incubation) <- c(\"Group\",\"Q_0.025\",\"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.975\")\nmean_aft <- incubation_aft$summary.fixed$mean\n\naft_incubation[,2:6] <- exp(aft_incubation[,2:6] + mean_aft)\nstudy_wide <- exp(incubation_aft$summary.fixed[,c(3,5:7,9)])\nrownames(study_wide) <- NULL\nnames(study_wide) <- c(\"Q_0.025\",\"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.975\")\nstudy_wide$Group <- \"study\"\naft_incubation <- rbind(study_wide, aft_incubation)\naft_incubation\n\n\n\n\n\n\nQ_0.025\nQ_0.25\nQ_0.5\nQ_0.75\nQ_0.975\nGroup\n\n\n\n\n2.289518\n2.858287\n3.170443\n3.518581\n4.405664\nstudy\n\n\n2.653615\n3.380300\n3.808423\n4.301140\n5.558763\ndonor\n\n\n3.506350\n4.422156\n4.962956\n5.582167\n7.161666\nGroup 2\n\n\n1.464660\n1.880941\n2.116881\n2.376889\n2.997234\nGroup 3\n\n\n1.765721\n2.255789\n2.530923\n2.832588\n3.563349\nGroup 4\n\n\n\n\n\n\nCompare treatment groups\n\n\nHide code\nplot_aft_linerange(incubation_aft, ylabel = \"Duration (days)\")\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nsave incubation samples\n\n\nHide code\nsaveRDS(incubation_samples, here(\"assets/incubation_samples.rds\"))\nsaveRDS(median_incubation, here(\"assets/incubation_median.rds\"))\nsaveRDS(aft_incubation, here(\"assets/incubation_aft_median.rds\"))"
  },
  {
    "objectID": "incubation.html#models",
    "href": "incubation.html#models",
    "title": "Incubation Phase",
    "section": "Models",
    "text": "Models\nCreating a survival model object to ensure time and censored animals are correctly indicated.\n\n\nHide code\nsurv_obj <- inla.surv(clin_start_df$scaled_duration, clin_start_df$Event)\n\n\n\nParametric SuvivalAccelerated Failure Time (AFT)\n\n\nParametric model for study-wide average duration.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(0.5, 0.001)))\n\nincubation_dur <- inla(surv_obj ~ 1 + \n                         f(shed_time, donor_shed,\n                           model = \"rw1\",\n                           constr=TRUE,\n                           scale.model = TRUE,\n                           hyper=pc_prec_iid),\n                        data = clin_start_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"exponential.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\n\n\nTreatment is specific to group therefore using group below to identify important differences.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(0.5, 0.001)))\n\nincubation_aft <- inla(surv_obj ~ 1 +\n                       f(group,\n                           model = \"iid\",\n                           constr=FALSE,\n                           hyper=pc_prec_iid),\n                        data = clin_start_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"lognormal.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\nWarning in sqrt(ee): NaNs produced"
  },
  {
    "objectID": "incubation.html#prepare-data",
    "href": "incubation.html#prepare-data",
    "title": "Incubation Phase",
    "section": "Prepare Data",
    "text": "Prepare Data\nQuick stats to check data\n\n\nHide code\nunique(clin_start_df$Event)\n\n\n[1] 0 1 3\n\n\nHide code\ncheck_stats <- clin_start_df %>%\n  filter(Event == 1 & censor_status == 1)\n\ndim(check_stats)\n\n\n[1] 13 16\n\n\nHide code\nrange(check_stats$dpe)\n\n\n[1] 2 5\n\n\nHide code\nmean(check_stats$dpe)\n\n\n[1] 3.076923\n\n\nHide code\nmedian(check_stats$dpe)\n\n\n[1] 3\n\n\nRemove Group 1 Group 1 was not infected and has no expectation of developing disease. Animals that were infected, verified by nasal, serum, or fever but never developed lesions are censored.\n\n\nHide code\nclin_start_df <- clin_start_df %>%\n filter(group != \"Group 1\",\n         Event == 1 | censor_status == 0 & censor_k == 1)\n\n\ncheck data\n\n\nHide code\nclin_start_df %>%\n  filter(Event == 1) %>%\n  summarise(mean_dpe = mean(dpe),\n            median_dpe = median(dpe))\n\n\n\n\n\n\nmean_dpe\nmedian_dpe\n\n\n\n\n3.076923\n3\n\n\n\n\n\n\nScale Time\nAdd an arbitrarily small value to eliminate zeros. Really not need with his specific data set, by an important step.\n\n\nHide code\nclin_start_df$scaled_duration <- clin_start_df$dpe + 0.0001\n\n\nWeighted Contacts\nContact with groups by donors was sequential at 24hr intervals, shedding rates (nasal swabs) varied over this period.\n\n\nHide code\nshed_rates <- antem_df %>%\n  filter(group == \"donor\") %>%\n  group_by(dpi) %>%\n  summarise(tot_shed = sum(ifelse(nasal == 45, 0, nasal), na.rm=T)) %>%\n  mutate(group = paste(\"Group\", dpi, sep=\" \"))\n\n# match cumulative shed from donors based on time of contact\nclin_start_df$donor_shed <- with(shed_rates,\n                                 tot_shed[match(\n                                   clin_start_df$group,\n                                                 group)])\n\n# an integer index is needed for modeling purposes, group contacts are 1:1 correlated with time\nclin_start_df$shed_time <- as.integer(as.factor(clin_start_df$group))"
  },
  {
    "objectID": "latent.html#prepare-data",
    "href": "latent.html#prepare-data",
    "title": "Latent Phase",
    "section": "Prepare Data",
    "text": "Prepare Data\nScale Time Add an arbitrarily small value to eliminate zeros. Really not need with his specific data set, by an important step.\n\n\nHide code\nlatent_end_df$scaled_duration <- latent_end_df$dpe + 0.0001\n\n\nScale Serum Scaling serum as potential covariate.\n\n\nHide code\nlatent_end_df$serum_0 <- latent_end_df$serum\nlatent_end_df$serum_0[latent_end_df$serum_0 == 45] = 0\nlatent_end_df$serum_0 <- as.numeric(scale(latent_end_df$serum_0, scale = T, center = F))"
  },
  {
    "objectID": "latent.html#models",
    "href": "latent.html#models",
    "title": "Latent Phase",
    "section": "Models",
    "text": "Models\nResponse Variable Creating a survival object to ensure time and censored animals are correctly indicated.\n\n\nHide code\nsurv_obj <- inla.surv(latent_end_df$scaled_duration, latent_end_df$latent_end)\n\n\n\nParametric SuvivalAccelerated Failure Time (AFT)\n\n\nParametric model for study-wide average duration.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\nlatent_end_mod <- inla(surv_obj ~ 1 + serum_0,\n                        data = latent_end_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"exponential.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))\n\n\n\n\nTreatment is specific to group therefore using group below to identify important differences.\n\n\nHide code\nreturn_quants <- c(0.025, 0.05, 0.25, 0.5, 0.75, 0.95, 0.975)\n\npc_prec_iid <- list(theta = list(prior=\"pc.prec\", \n                                 param=c(1, 0.001)))\n\nlatent_aft_mod <- inla(surv_obj ~ 1 +\n                       f(group,\n                           model = \"iid\",\n                           constr=FALSE,\n                           hyper=pc_prec_iid),\n                        data = latent_end_df, \n                        verbose=FALSE,\n                        quantiles = return_quants,\n                        family = \"lognormal.surv\",\n                        control.fixed = list(prec = 1, prec.intercept  = 0.0001),\n                        control.compute=list(dic = TRUE, cpo = FALSE, waic = TRUE))"
  },
  {
    "objectID": "latent.html#aft-treament-effects",
    "href": "latent.html#aft-treament-effects",
    "title": "Latent Phase",
    "section": "AFT Treament Effects",
    "text": "AFT Treament Effects\nGet treatment-level estimated duration\n\n\nHide code\naft_latent <- latent_aft_mod$summary.random$group[,c(1:4,6,7,8, 10)]\nnames(aft_latent) <- c(\"Group\",\"Mean\", \"sd\", \"Q_0.025\",\"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.975\")\nmean_aft <- latent_aft_mod$summary.fixed$mean\n\naft_latent[,2:8] <- exp(aft_latent[,2:8] + mean_aft)\nstudy_wide <- exp(latent_aft_mod$summary.fixed[,c(1:3, 5:7, 9)])\nrownames(study_wide) <- NULL\nnames(study_wide) <- c(\"Mean\", \"sd\", \"Q_0.025\",\"Q_0.25\", \"Q_0.5\", \"Q_0.75\", \"Q_0.975\")\nstudy_wide$Group <- \"study\"\naft_latent <- rbind(study_wide, aft_latent)\naft_latent\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMean\nsd\nQ_0.025\nQ_0.25\nQ_0.5\nQ_0.75\nQ_0.975\nGroup\n\n\n\n\n1.270207\n1.173833\n0.9259857\n1.148989\n1.268414\n1.401915\n1.757435\nstudy\n\n\n1.381136\n1.517493\n1.0116252\n1.247324\n1.329053\n1.515215\n2.099118\ndonor\n\n\n1.420993\n1.509849\n1.0590048\n1.269587\n1.378708\n1.568838\n2.110296\nGroup 2\n\n\n1.149395\n1.507885\n0.7736175\n1.044813\n1.185920\n1.278711\n1.545068\nGroup 3\n\n\n1.149395\n1.507885\n0.7736175\n1.044813\n1.185920\n1.278711\n1.545068\nGroup 4\n\n\n\n\n\n\nCompare treatment groups\n\n\nHide code\nplot_aft_linerange(latent_aft_mod, y_min = 0, y_max = 2.5, brks = 0.5, ylimit = 2.5)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nsave latent samples\n\n\nHide code\nsaveRDS(latent_samples, here(\"assets/latent_samples.rds\"))\nsaveRDS(median_latent, here(\"assets/latent_median.rds\"))\nsaveRDS(aft_latent, here(\"assets/latent_aft_median.rds\"))"
  }
]